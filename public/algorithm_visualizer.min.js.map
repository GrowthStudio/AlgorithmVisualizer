{"version":3,"sources":["algorithm_visualizer.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_$","$","extend","cache","lastFileUsed","files","assertFileName","name","getCachedFile","updateCachedFile","updates","getLastFileUsed","setLastFileUsed","file","2","Editor","TracerManager","DOM","_require","showLoadingSlider","hideLoadingSlider","Cache","state","isLoading","editor","tracerManager","categories","loadedScratch","wikiList","initState","App","this","getIsLoading","setIsLoading","loading","getEditor","getCategories","getCategory","setCategories","updateCategory","getTracerManager","getLoadedScratch","setLoadedScratch","getWikiList","setWikiList","hasWiki","wiki","indexOf","init","setup","prototype","../dom/loading_slider","../dom/setup","../editor","../tracer_manager","./cache","3","4","array2D","modules","util","getTracerName","document","getElementById","value","getNumColumns","column_field","logger","arr1DTracer","button_1DMatrix","addEventListener","clearModules","Array1DTracer","arrElem","querySelector","mousescroll","LogTracer","numColumns","data","fauxData","setData","tableToInputFields","positionModules","refresh","button_JS","generateJS","../module","./array2d","./util","5","getNumRows","row_field","c","D","push","j","Math","floor","random","numRows","table","elem","createElement","type","classList","add","childNodes","innerHTML","appendChild","tracer","tracerName","clear","print","currVal","nors","line","comma","Number","isNaN","enabledHightlighting","colmElem","inputFields","undefined","wheelDelta","detail","getElementsByClassName","style","width","parseFloat","fontSize","arr2DTracer","button_2DMatrix","Array2DTracer","6","array2d","array1d","Server","getPath","closeCreate","$btnClose","click","remove","reloadAlgorithm","_getPath","category","algorithm","loadAlgorithm","then","showAlgorithm","createHTML","append","check","clickTraceTab","../dom","../server","../server/helpers","./array1d","7","elems","spacing","bottom","top","parent","parentElement","numChild","removeChild","firstChild","wrapper","btn","8","app","each","getAlgorithmDOM","subList","attr","addCategoryToDOM","_app$getCategory","categoryName","categorySubList","list","$category","$self","toggleClass","find","next","toggle","$algorithms","$algorithm","../app","./show_algorithm","9","addFileToDOM","explanation","$file","loadFile","removeClass","addClass","requestedFile","empty","first","scroll","10","reqFunc","extFunc","reqFuncs","extFuncs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","tmpReqFunc","body","err","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tmpExtFunc","$btnFullscreen","fullScreen","mozFullScreen","webkitIsFullScreen","11","$buttons","keyup","query","val","re","RegExp","hide","show","$c","hasClass","filter","cName","test","text","children","12","addCategories","showDescription","addFiles","showFirstAlgorithm","showRequestedAlgorithm","showWiki","enableSearch","resizeWorkspace","enableFullScreen","./add_categories","./add_files","./enable_fullscreen","./enable_search","./resize_workspace","./show_description","./show_first_algorithm","./show_requested_algorithm","./show_wiki","13","14","create","$container","15","resize","16","setupDividers","setupDocument","setupFilesBar","setupInterval","setupModuleContainer","setupTabContainer","setupSideMenu","setupTopMenu","setupWindow","stopPropagation","./setup_dividers","./setup_document","./setup_files_bar","./setup_interval","./setup_module_container","./setup_side_menu","./setup_tab_container","./setup_top_menu","./setup_window","17","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Array","isArray","Object","TypeError","addDividerToDom","divider","_divider","vertical","$first","$second","$parent","thickness","$divider","dragging","_left","css","left","x","mousedown","_ref","pageX","mousemove","_ref2","new_left","position","percent","min","max","mouseup","_top","height","right","y","_ref3","pageY","_ref4","new_top","dividers","../../app","../resize_workspace","18","on","href","preventDefault","window","open","alert","command","19","definitelyBigger","$wrapper","clipWidth","scrollLeft","get","reverse","outerWidth","$left","$right","lefter","righter","20","Toast","minInterval","maxInterval","startInterval","stepInterval","normalize","sec","interval","message","$interval","step","_normalize","_normalize2","seconds","showInfoToast","../toast","21","$module_container","findOwner","mousewheel","22","sidemenu_percent","$sidemenu","$workspace","animate","../../server","../show_algorithm","23","24","TopMenu","select","$icon","shareScratchPaper","url","$btnRun","$btnTrace","$btnPause","$btnPrev","$btnNext","$btnGenerate","disableFlowControl","enableFlowControl","execute","console","error","showErrorToast","resetTopMenuButtons","isPause","resumeStep","pauseStep","prevStep","nextStep","../../create","../top_menu","25","26","utils","$menu","category_name","algorithm_name","isScratchPaper","categoryObj","html","clearContent","renderMathJax","../utils","27","_typeof","obj","constructor","key","$ul","forEach","li","_$ul","prop","$type","$value","28","29","setTimeout","trigger","postMessage","JSON","stringify","status","30","converter","showdown","Converter","tables","loadWiki","makeHtml","scrollTop","31","showToast","$toast","fadeOut","32","flowControlBtns","setFlowControlState","isDisabled","$btn","unhighlightLine","setInterval","activateBtnPause","deactivateBtnPause","33","id","ace","edit","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","setTheme","session","setMode","$blockScrolling","Infinity","34","dataLines","deallocateAll","lines","split","newLines","replace","eval","Babel","transform","join","presets","visualize","removeUnallocated","executeData","algoData","executeDataAndCode","algoCode","35","_this","Range","dataEditor","createEditor","codeEditor","setValue","setCode","setContent","clearData","clearCode","getValue","Executor","highlightLine","lineNumber","getSession","marker","removeMarker","addMarker","reset","../dom/top_menu","./create","./executor","36","RSVP","AppConstructor","ajaxSetup","dataType","_require2","getHashValue","getParameterByName","reason","assert","appConstructor","loadCategories","v1LoadedScratch","v2LoadedScratch","vLoadedScratch","location","protocol","host","pathname","./app","./app/constructor","./dom","./module","./server","./server/helpers","./utils","rsvp","37","Array2D","N","randomSorted","38","Integer","M","map","sort","b","./integer","39","C","40","ratio","G","41","Array1D","CoordinateSystem","DirectedGraph","UndirectedGraph","WeightedDirectedGraph","WeightedUndirectedGraph","./coordinate_system","./directed_graph","./undirected_graph","./weighted_directed_graph","./weighted_undirected_graph","42","43","44","45","46","tracers","datas","./data","./tracer","47","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_createClass","defineProperties","target","props","descriptor","defineProperty","protoProps","staticProps","_Array2DTracer","idx","v","options","chartTracer","newStep","capsule","sy","ey","sx","ex","processStep","48","Tracer","refineByType","_Tracer","isNew","initView","manager","pushStep","pushSelectingStep","arguments","_separate","_deseparate","args","slice","shift","mode","coord","$row","$table","eq","$col","color","selected","notified","paint","paintColor","deseparate","separate","viewX","viewY","paddingH","paddingV","apply","getCellCss","clearColor","deseparateAll","padding","toFixed","font-size","dragX","dragY","originalEvent","delta","weight","after","../../tracer_manager/util/index","49","ChartTracer","chart","config","datasets","update","labels","String","backgroundColor","toString","Chart","scales","yAxes","ticks","beginAtZero","animation","legend","responsive","maintainAspectRatio","50","DirectedGraphTracer","CoordinateSystemTracer","_DirectedGraphTracer","graph","nodes","edges","label","size","read","camera","goTo","angle","visit","targetNode","visited","source","edgeId","edge","dropEdge","addEdge","logTracer","v1","v2","temp","node","context","settings","setLineDash","nodeIdx","substring","ends","drawEdge","prefix","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","defaultEdgeType","funcEdgesDef","getColor","51","root","positions","setTreeData","undirected","maxDepth","chk","getDepth","depth","place","wgap","dfs","vgap","cnt","unitAngle","PI","currentAngle","sin","cos","_j","renderers","clearGraphColor","edgeColor","defaultNodeColor","defaultEdgeColor","font","fillStyle","textAlign","fillText","round","tSize","sX","sY","tX","tY","atan2","dist","aSize","d","sqrt","pow","aX","aY","vX","vY","closePath","fill","drawArrow","sigma","renderer","container","minArrowSize","maxEdgeSize","labelThreshold","defaultLabelColor","zoomMin","zoomMax","skipErrors","minNodeSize","maxNodeSize","labelSize","labelSizeRatio","funcLabelsDef","drawLabel","funcHoversDef","drawOnHover","funcEdgesArrow","plugins","dragNodes","canvas","def","func","hovers","arrow","52","DirectedGraphConstructTracer","nodePlacement","nodeCollection","element","idToFind","result","addRoot","addNode","nodeObject","_findNode","rootObject","createGraphNode","drawGraph","level","nodeConstruct","parentObject","isSpliced","insertIndex","child","originalVal","splice","nodeLevel","arrangeChildNodes","offsetWidth","midPoint","addGraphNode","calculatedX","childNode","isVisited","colorPalete","53","UndirectedGraphTracer","WeightedDirectedGraphTracer","WeightedUndirectedGraphTracer","./chart","./directed_graph_construct","./log","54","msg","scrollToEnd","action","duration","scrollHeight","55","_toConsumableArray","arr2","from","toJSON","fromJSON","default","allocate","setName","_len","_key","$name","defaultName","lastData","56","57","clearWeights","dX","dY","save","active","textBaseline","translate","rotate","restore","edgeLabelSize","defaultEdgeLabelSize","edgeLabelSizePowRatio","drawNodeWeight","drawEdgeWeight","58","_WeightedDirectedGrap","59","request","./request","60","61","62","ajax","defaults","Promise","resolve","reject","callbacks","success","response","opts","63","checkLoading","regex","results","exec","_results","hash","substr","params","pair","setHashValue","found","newHash","removeHashValue","setPath","path","_hash$split","_hash$split2","../dom/toast","64","loadScratchPaper","loadWikiList","./load_algorithm","./load_categories","./load_file","./load_scratch_paper","./load_wiki","./load_wiki_list","./share_scratch_paper","65","getJSON","getAlgorithmDir","dir","./ajax/get_json","66","67","getFileDir","loadDataAndCode","loadFileAndUpdateContent","content","cachedContentExists","cachedFile","./ajax/get","./helpers","68","extractGistCode","gistID","CREDIT.md","69","70","71","postJSON","_app$getEditor","gist","description","public","data.js","code.js","_location","./ajax/post_json","72","tm","../module/tracer/tracer","./manager","73","ModuleContainer","grep","stepLimit","timer","pause","capsules","allocated","newTracer","selectedCapsule","count","className","getClassName","order","changed","removed","traces","traceIndex","stepCnt","clearTimeout","len","last","trace","virtual","finalIndex","functionName","../dom/module_container","74","parse","75","./from_json","./refine_by_type","./to_json","76","item","refineNumber","refineBoolean","refineString","str","num","bool","77","78","MathJax","Hub","Queue","79","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","run","Item","array","noop","process","nextTick","title","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","80","global","factory","define","amd","callback","callbacksFor","_promiseCallbacks","configure","objectOrFunction","isFunction","isObject","isMaybeThenable","scheduleFlush","entry","payload","guid","childGuid","childId","stack","instrument","eventName","promise","_guidKey","_id","_result","_label","timeStamp","now","resolve$1","withOwnPromise","getThen","GET_THEN_ERROR","tryThen","then$$1","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","async","sealed","fulfill","handleOwnThenable","_state","FULFILLED","REJECTED","_onError","subscribe","handleMaybeThenable","maybeThenable","isOwnThenable","publishRejection","publish","PENDING","_subscribers","onFulfillment","onRejection","subscribers","settled","invokeCallback","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","initializePromise","resolver","resolved","Enumerator","input","abortOnReject","_instanceConstructor","_abortOnReject","_init","makeSettledResult","all","entries","race","reject$1","needsResolver","needsNew","counter","Result","getThen$1","ERROR","tryApply","makeObject","_","argumentNames","arrayResult","wrapThenable","onFulFillment","denodeify","nodeFunc","fn","promiseInput","arg","needsPromiseInput","GET_THEN_ERROR$1","p","handlePromiseInput","handleValueInput","all$1","allSettled","AllSettled","race$1","_possibleConstructorReturn$1","_inherits$1","PromiseHash","_possibleConstructorReturn$2","_inherits$2","hashSettled","HashSettled","rethrow","defer","deferred","promises","mapFn","values","resolve$2","reject$2","resolveAll","resolveSingle","filterFn","filtered","newLength","asap","queue$1","scheduleFlush$1","useNextTick","match","setImmediate","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","createTextNode","observe","characterData","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","attemptVertex","vertx","runOnLoop","runOnContext","_defineProperty","EventTarget","mixin","allCallbacks","index","_isArray","Date","getTime","_remaining","_enumerate","_eachEntry","_settleMaybeThenable","resolve$$1","_settledAt","_makeResult","_willSettleAt","enumerator","guidKey","cast","_Enumerator","hasOwnProperty","_PromiseHash","browserWindow","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","platform","_asap$cast$Promise$Ev","cb","_process"],"mappings":"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","file":"algorithm_visualizer.min.js","sourcesContent":["/**\n * algorithm-visualizer - Algorithm Visualizer\n * @version v0.1.0\n * @author Jason Park & contributors\n * @link https://github.com/parkjs814/AlgorithmVisualizer#readme\n * @license MIT\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _$ = $,\n    extend = _$.extend;\n\n\nvar cache = {\n  lastFileUsed: '',\n  files: {}\n};\n\nvar assertFileName = function assertFileName(name) {\n  if (!name) {\n    throw 'Missing file name';\n  }\n};\n\n/**\n * Global application cache\n */\nmodule.exports = {\n  getCachedFile: function getCachedFile(name) {\n    assertFileName(name);\n    return cache.files[name];\n  },\n  updateCachedFile: function updateCachedFile(name, updates) {\n    assertFileName(name);\n    if (!cache.files[name]) {\n      cache.files[name] = {};\n    }\n    extend(cache.files[name], updates);\n  },\n  getLastFileUsed: function getLastFileUsed() {\n    return cache.lastFileUsed;\n  },\n  setLastFileUsed: function setLastFileUsed(file) {\n    cache.lastFileUsed = file;\n  }\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar Editor = require('../editor');\nvar TracerManager = require('../tracer_manager');\nvar DOM = require('../dom/setup');\n\nvar _require = require('../dom/loading_slider'),\n    showLoadingSlider = _require.showLoadingSlider,\n    hideLoadingSlider = _require.hideLoadingSlider;\n\nvar Cache = require('./cache');\n\nvar state = {\n  isLoading: null,\n  editor: null,\n  tracerManager: null,\n  categories: null,\n  loadedScratch: null,\n  wikiList: null\n};\n\nvar initState = function initState(tracerManager) {\n  state.isLoading = false;\n  state.editor = new Editor(tracerManager);\n  state.tracerManager = tracerManager;\n  state.categories = {};\n  state.loadedScratch = null;\n  state.wikiList = [];\n};\n\n/**\n * Global application singleton.\n */\nvar App = function App() {\n\n  this.getIsLoading = function () {\n    return state.isLoading;\n  };\n\n  this.setIsLoading = function (loading) {\n    state.isLoading = loading;\n    if (loading) {\n      showLoadingSlider();\n    } else {\n      hideLoadingSlider();\n    }\n  };\n\n  this.getEditor = function () {\n    return state.editor;\n  };\n\n  this.getCategories = function () {\n    return state.categories;\n  };\n\n  this.getCategory = function (name) {\n    return state.categories[name];\n  };\n\n  this.setCategories = function (categories) {\n    state.categories = categories;\n  };\n\n  this.updateCategory = function (name, updates) {\n    $.extend(state.categories[name], updates);\n  };\n\n  this.getTracerManager = function () {\n    return state.tracerManager;\n  };\n\n  this.getLoadedScratch = function () {\n    return state.loadedScratch;\n  };\n\n  this.setLoadedScratch = function (loadedScratch) {\n    state.loadedScratch = loadedScratch;\n  };\n\n  this.getWikiList = function () {\n    return state.wikiList;\n  };\n\n  this.setWikiList = function (wikiList) {\n    state.wikiList = wikiList;\n  };\n\n  this.hasWiki = function (wiki) {\n    return ~state.wikiList.indexOf(wiki);\n  };\n\n  var tracerManager = TracerManager.init();\n\n  initState(tracerManager);\n  DOM.setup(tracerManager);\n};\n\nApp.prototype = Cache;\n\nmodule.exports = App;\n\n},{\"../dom/loading_slider\":13,\"../dom/setup\":16,\"../editor\":35,\"../tracer_manager\":72,\"./cache\":1}],3:[function(require,module,exports){\n'use strict';\n\n/**\n * This is the main application instance.\n * Gets populated on page load. \n */\n\nmodule.exports = {};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar array2D = require('./array2d');\nvar modules = require('../module');\nvar util = require('./util');\n\nvar getTracerName = function getTracerName() {\n    return document.getElementById(\"tracerName-1D\").value;\n};\n\nvar getNumColumns = function getNumColumns() {\n    var column_field = document.getElementById('numColumns-1D');\n    return column_field.value;\n};\n\nvar setup = function setup() {\n    var button_1DMatrix = document.getElementById(\"button-1DMatrix\");\n    var logger;\n    var arr1DTracer;\n    button_1DMatrix.addEventListener('click', function () {\n        util.clearModules();\n        arr1DTracer = new modules.Array1DTracer();\n        var arrElem = document.querySelector('.module_wrapper');\n        arrElem.addEventListener(\"mousewheel\", array2D.mousescroll, false);\n        arrElem.addEventListener(\"DOMMouseScroll\", array2D.mousescroll, false);\n        logger = new modules.LogTracer('Generated Javascript');\n\n        var numColumns = getNumColumns();\n        var data = array2D.fauxData(1, numColumns)[0];\n\n        arr1DTracer.setData(data);\n        array2D.tableToInputFields(1, numColumns);\n        util.positionModules();\n        arr1DTracer.refresh();\n    }, false);\n    var button_JS = document.getElementById('button-generateJS-1D');\n    button_JS.addEventListener('click', function () {\n        array2D.generateJS(logger, 'Array1DTracer', getTracerName());\n    }, false);\n};\n\nmodule.exports = {\n    setup: setup\n};\n\n},{\"../module\":46,\"./array2d\":5,\"./util\":7}],5:[function(require,module,exports){\n'use strict';\n\nvar modules = require('../module');\nvar util = require('./util');\n\nvar getTracerName = function getTracerName() {\n    return document.getElementById(\"tracerName-2D\").value;\n};\n\nvar getNumRows = function getNumRows() {\n    var row_field = document.getElementById('numRows-2D');\n    return row_field.value;\n};\n\nvar getNumColumns = function getNumColumns() {\n    var column_field = document.getElementById('numColumns-2D');\n    return column_field.value;\n};\n\nvar fauxData = function fauxData(r, c) {\n    var D = [];\n    for (var i = 0; i < r; i++) {\n        D.push([]);\n        for (var j = 0; j < c; j++) {\n            D[i].push(Math.floor(Math.random() * 10 + 1));\n        }\n    }\n    return D;\n};\n\nvar tableToInputFields = function tableToInputFields(numRows, numColumns) {\n    var table = document.querySelector('.mtbl-table');\n\n    for (var i = 0; i < numRows; i++) {\n        for (var j = 0; j < numColumns; j++) {\n            var elem = document.createElement('input');\n            elem.type = 'Text';\n            elem.value = Math.floor(Math.random() * 10 + 1);\n            elem.classList.add('mtbl-col', 'inputField');\n            table.childNodes[i].childNodes[j].innerHTML = '';\n            table.childNodes[i].childNodes[j].appendChild(elem);\n        }\n    }\n};\n\nvar generateJS = function generateJS(logger, tracer, tracerName) {\n    if (!logger) return;\n\n    logger.clear();\n    var table = document.querySelector('.mtbl-table');\n\n    var numRows = table.childNodes.length;\n    var numColumns = table.childNodes[0].childNodes.length;\n\n    logger.print('Copy and paste this code in your data.js file!');\n    logger.print('');\n\n    if (numRows > 1) {\n        logger.print('let myTable = [');\n    }\n\n    var line = 'let myTable = [';\n    var i;\n    var j;\n    var comma = ',';\n    var currVal;\n    var nors;\n    for (i = 0; i < numRows; i++) {\n        if (numRows > 1) {\n            line = '[';\n        }\n        for (j = 0; j < numColumns - 1; j++) {\n            currVal = table.childNodes[i].childNodes[j].childNodes[0].value;\n            nors = Number(currVal);\n            if (isNaN(nors)) {\n                currVal = \"'\" + currVal + \"'\";\n            }\n            line += currVal + ',';\n        }\n        if (i === numRows - 1) {\n            comma = '';\n        }\n        currVal = table.childNodes[i].childNodes[j++].childNodes[0].value;\n        nors = Number(currVal);\n        if (isNaN(nors)) {\n            currVal = \"'\" + currVal + \"'\";\n        }\n        line += currVal + ']' + comma;\n        logger.print(line);\n    }\n    if (numRows > 1) {\n        logger.print(']');\n    }\n\n    logger.print(\"let myTableTracer = new \" + tracer + \" ('\" + tracerName + \"')\");\n    logger.print('myTableTracer._setData (myTable)');\n\n    util.enabledHightlighting();\n};\n\nvar mousescroll = function mousescroll(e) {\n    var colmElem = document.querySelector('.mtbl-col');\n    var delta = e.wheelDelta !== undefined && e.wheelDelta || e.detail !== undefined && -e.detail;\n\n    var inputFields = document.getElementsByClassName(\"inputField\");\n    for (var i = 0; i < inputFields.length; i++) {\n        inputFields[i].style.width = parseFloat(colmElem.style.fontSize) * 2.5 + \"px\";\n    }\n};\n\nvar setup = function setup() {\n    var button_2DMatrix = document.getElementById(\"button-2DMatrix\");\n    var logger;\n    var arr2DTracer;\n    button_2DMatrix.addEventListener('click', function () {\n        util.clearModules();\n        arr2DTracer = new modules.Array2DTracer();\n        var arrElem = document.querySelector('.module_wrapper');\n        arrElem.addEventListener(\"mousewheel\", mousescroll, false);\n        arrElem.addEventListener(\"DOMMouseScroll\", mousescroll, false);\n        logger = new modules.LogTracer('Generated Javascript');\n\n        var numRows = getNumRows();\n        var numColumns = getNumColumns();\n        var data = fauxData(numRows, numColumns);\n\n        arr2DTracer.setData(data);\n        tableToInputFields(numRows, numColumns);\n        util.positionModules();\n        arr2DTracer.refresh();\n    }, false);\n    var button_JS = document.getElementById('button-generateJS-2D');\n    button_JS.addEventListener('click', function () {\n        generateJS(logger, 'Array2DTracer', getTracerName());\n    }, false);\n};\n\nmodule.exports = {\n    setup: setup,\n    mousescroll: mousescroll,\n    fauxData: fauxData,\n    tableToInputFields: tableToInputFields,\n    generateJS: generateJS\n};\n\n},{\"../module\":46,\"./util\":7}],6:[function(require,module,exports){\n'use strict';\n\nvar modules = require('../module');\nvar array2d = require('./array2d');\nvar array1d = require('./array1d');\nvar util = require('./util');\nvar Server = require('../server');\nvar DOM = require('../dom');\n\nvar _require = require('../server/helpers'),\n    getPath = _require.getPath;\n\nvar closeCreate = function closeCreate() {\n    var $btnClose = $('#btn_close');\n\n    $btnClose.click(function () {\n        $('.sandbox_container').remove();\n        util.clearModules();\n        reloadAlgorithm();\n    });\n};\n\nvar reloadAlgorithm = function reloadAlgorithm() {\n    var _getPath = getPath(),\n        category = _getPath.category,\n        algorithm = _getPath.algorithm,\n        file = _getPath.file;\n\n    Server.loadAlgorithm(category, algorithm).then(function (data) {\n        DOM.showAlgorithm(category, algorithm, data);\n    });\n};\n\nvar createHTML = function createHTML() {\n    $('.workspace').append(\"<div class='sandbox_container'>\\\n            <section class='close_bar'>\\\n            <div class='btn' id='btn_close'>\\\n                <div class='wrapper'>\\\n                    <i class='fa fa-times' aria-hidden='true'></i>\\\n                </div>\\\n            </div>\\\n            </section>\\\n            <section class='auto-gen'>\\\n                <div class='grid' id='array1D-gen'>\\\n                <div> array1DTracer </div>\\\n                <i class='fa fa-ellipsis-h fa-5x' aria-hidden='true'></i>\\\n                <div class='fields'>\\\n                # of Columns: <input class='inputs'id='numColumns-1D' type='number' value='5'>\\\n                </div>\\\n                <div class='fields'>\\\n                Tracer Name: <input class='inputs'id='tracerName-1D' type='text' value='default'>\\\n                </div>\\\n                <button class='sb-button' id='button-1DMatrix'>Create 1DMatrix</button>\\\n                <button class='sb-button' id='button-generateJS-1D'>Generate Javascript</button>\\\n                </div>\\\n                <div class='grid' id='array2D-gen'>\\\n                <div> array2DTracer </div>\\\n                <i class='fa fa-th fa-5x' aria-hidden='true'></i>\\\n                <div class='fields'>\\\n                # of Rows: <input class='inputs'id='numRows-2D' type='number' value='5'>\\\n                </div>\\\n                <div class='fields'>\\\n                # of Columns: <input class='inputs'id='numColumns-2D' type='number' value='5'>\\\n                </div>\\\n                <div class='fields'>\\\n                Tracer Name: <input class='inputs'id='tracerName-2D' type='text' value='default'>\\\n                </div>\\\n                <button class='sb-button' id='button-2DMatrix'>Create 2DMatrix</button>\\\n                <button class='sb-button' id='button-generateJS-2D'>Generate Javascript</button>\\\n                </div>\\\n                <div class='grid' id='chart-gen'></div>\\\n                <div class='grid' id='graph-gen'></div>\\\n            </section>\\\n    </div>\");\n};\n\nvar init = function init() {\n\n    var check = $('.sandbox_container');\n    if (!check.length) {\n        util.clearModules();\n        createHTML();\n        array2d.setup();\n        array1d.setup();\n        closeCreate();\n        util.clickTraceTab();\n    }\n};\n\nmodule.exports = {\n    init: init\n};\n\n},{\"../dom\":12,\"../module\":46,\"../server\":64,\"../server/helpers\":63,\"./array1d\":4,\"./array2d\":5,\"./util\":7}],7:[function(require,module,exports){\n'use strict';\n\nvar positionModules = function positionModules() {\n    var elems = document.getElementsByClassName('module_wrapper');\n    if (elems <= 0) return;\n\n    var n = elems.length;\n    var spacing = 100 / n;\n\n    for (var i = 0; i < n; i++) {\n        if (i === 0) {\n            elems[i].style.bottom = spacing * (n - 1) + '%';\n        } else if (i === n - 1) {\n            elems[i].style.top = spacing * i + '%';\n        } else {\n            elems[i].style.top = spacing * i + '%';\n            elems[i].style.bottom = spacing * i + '%';\n        }\n    }\n};\n\nvar clearModules = function clearModules() {\n    var elems = document.getElementsByClassName('module_wrapper');\n    if (elems.length > 0) {\n        var parent = elems[0].parentElement;\n        var numChild = parent.childNodes.length;\n        for (var i = 0; i < numChild; i++) {\n            parent.removeChild(parent.firstChild);\n        }\n    }\n};\n\nvar enabledHightlighting = function enabledHightlighting() {\n    var elems = document.getElementsByClassName('module_wrapper');\n    var logger = elems[1];\n    var wrapper = logger.childNodes[1];\n    for (var i = 0; i < wrapper.childNodes.length; i++) {\n        wrapper.childNodes[i].style[\"-webkit-user-select\"] = \"all\";\n    }\n};\n\nvar clickTraceTab = function clickTraceTab() {\n    var btn = document.getElementById('btn_trace');\n    if (btn) {\n        btn.click();\n    }\n};\n\nmodule.exports = {\n    enabledHightlighting: enabledHightlighting,\n    positionModules: positionModules,\n    clearModules: clearModules,\n    clickTraceTab: clickTraceTab\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\nvar Server = require('../server');\nvar showAlgorithm = require('./show_algorithm');\n\nvar _$ = $,\n    each = _$.each;\n\n\nvar getAlgorithmDOM = function getAlgorithmDOM(category, subList, algorithm) {\n  return $('<button class=\"indent\">').append(subList[algorithm]).attr('data-algorithm', algorithm).attr('data-category', category).click(function () {\n    Server.loadAlgorithm(category, algorithm).then(function (data) {\n      showAlgorithm(category, algorithm, data);\n    });\n  });\n\n  $('#list').append($algorithm);\n};\n\nvar addCategoryToDOM = function addCategoryToDOM(category) {\n  var _app$getCategory = app.getCategory(category),\n      categoryName = _app$getCategory.name,\n      categorySubList = _app$getCategory.list;\n\n  var $category = $('<button class=\"category\">').append('<i class=\"fa fa-fw fa-caret-right\">').append(categoryName).attr('data-category', category);\n\n  $category.click(function () {\n    var $self = $(this);\n    $self.toggleClass('open');\n    $self.find('i.fa').toggleClass('fa-caret-right fa-caret-down');\n    $self.next().toggle(300);\n  });\n\n  var $algorithms = $('<div class=\"algorithms collapse\">');\n  $('#list').append($category).append($algorithms);\n\n  each(categorySubList, function (algorithm) {\n    var $algorithm = getAlgorithmDOM(category, categorySubList, algorithm);\n    $algorithms.append($algorithm);\n  });\n};\n\nmodule.exports = function () {\n  each(app.getCategories(), addCategoryToDOM);\n};\n\n},{\"../app\":3,\"../server\":64,\"./show_algorithm\":26}],9:[function(require,module,exports){\n'use strict';\n\nvar Server = require('../server');\n\nvar _$ = $,\n    each = _$.each;\n\n\nvar addFileToDOM = function addFileToDOM(category, algorithm, file, explanation) {\n  var $file = $('<button>').append(file).attr('data-file', file).click(function () {\n    Server.loadFile(category, algorithm, file, explanation);\n    $('.files_bar > .wrapper > button').removeClass('active');\n    $(this).addClass('active');\n  });\n  $('.files_bar > .wrapper').append($file);\n  return $file;\n};\n\nmodule.exports = function (category, algorithm, files, requestedFile) {\n  $('.files_bar > .wrapper').empty();\n\n  each(files, function (file, explanation) {\n    var $file = addFileToDOM(category, algorithm, file, explanation);\n    $file.addClass('tab_button');\n    if (requestedFile && requestedFile == file) $file.click();\n  });\n\n  if (!requestedFile) $('.files_bar > .wrapper > button').first().click();\n  $('.files_bar > .wrapper').scroll();\n};\n\n},{\"../server\":64}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function () {\n  var reqFunc = null;\n  var extFunc = null;\n  var reqFuncs = ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'];\n  var extFuncs = ['exitFullscreen', 'webkitExitFullscreen', 'mozCancelFullScreen', 'msExitFullscreen'];\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = reqFuncs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var tmpReqFunc = _step.value;\n\n      if (document.body[tmpReqFunc]) {\n        reqFunc = tmpReqFunc;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = extFuncs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var tmpExtFunc = _step2.value;\n\n      if (document[tmpExtFunc]) {\n        extFunc = tmpExtFunc;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  var $btnFullscreen = $('#btn_fullscreen');\n\n  $btnFullscreen.click(function () {\n    if (document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen) {\n      if (extFunc) document[extFunc]();\n    } else {\n      if (reqFunc) document.body[reqFunc]();\n    }\n  });\n};\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function () {\n\tvar $buttons = $('[data-category]');\n\n\t$('#search-bar').keyup(function () {\n\t\tvar query = $(this).val();\n\t\tvar re = new RegExp(query, 'i');\n\n\t\tquery ? $('#footer').hide() : $('#footer').show();\n\t\t$.each($('#list .category'), function (i, c) {\n\t\t\tvar $c = $(c);\n\t\t\t!$c.hasClass('open') && $c.click();\n\t\t});\n\n\t\t$buttons.show().filter(function () {\n\t\t\tvar cName = $(this).attr('data-category');\n\n\t\t\tif ($(this).hasClass('category')) {\n\t\t\t\treturn !re.test($('[data-category=\"' + cName + '\"]').text());\n\t\t\t} else {\n\t\t\t\treturn !(re.test($('.category[data-category=\"' + cName + '\"]').text()) || re.test($(this).text()));\n\t\t\t}\n\t\t}).hide();\n\n\t\t$('.algorithms').show().filter(function () {\n\t\t\treturn !$(this).children(':visible').length;\n\t\t}).hide();\n\t});\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar showAlgorithm = require('./show_algorithm');\nvar addCategories = require('./add_categories');\nvar showDescription = require('./show_description');\nvar addFiles = require('./add_files');\nvar showFirstAlgorithm = require('./show_first_algorithm');\nvar showRequestedAlgorithm = require('./show_requested_algorithm');\nvar showWiki = require('./show_wiki');\nvar enableSearch = require('./enable_search');\nvar resizeWorkspace = require('./resize_workspace');\nvar enableFullScreen = require('./enable_fullscreen');\n\nmodule.exports = {\n  showAlgorithm: showAlgorithm,\n  addCategories: addCategories,\n  showDescription: showDescription,\n  addFiles: addFiles,\n  showFirstAlgorithm: showFirstAlgorithm,\n  showRequestedAlgorithm: showRequestedAlgorithm,\n  showWiki: showWiki,\n  enableSearch: enableSearch,\n  resizeWorkspace: resizeWorkspace,\n  enableFullScreen: enableFullScreen\n};\n\n},{\"./add_categories\":8,\"./add_files\":9,\"./enable_fullscreen\":10,\"./enable_search\":11,\"./resize_workspace\":15,\"./show_algorithm\":26,\"./show_description\":27,\"./show_first_algorithm\":28,\"./show_requested_algorithm\":29,\"./show_wiki\":30}],13:[function(require,module,exports){\n'use strict';\n\nvar showLoadingSlider = function showLoadingSlider() {\n  $('#loading-slider').removeClass('loaded');\n};\n\nvar hideLoadingSlider = function hideLoadingSlider() {\n  $('#loading-slider').addClass('loaded');\n};\n\nmodule.exports = {\n  showLoadingSlider: showLoadingSlider,\n  hideLoadingSlider: hideLoadingSlider\n};\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nvar create = function create() {\n  var $container = $('<section class=\"module_wrapper\">');\n  $('.module_container').append($container);\n  return $container;\n};\n\nmodule.exports = {\n  create: create\n};\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\n\nmodule.exports = function () {\n  app.getTracerManager().resize();\n  app.getEditor().resize();\n  $('.files_bar > .wrapper').scroll();\n};\n\n},{\"../app\":3}],16:[function(require,module,exports){\n'use strict';\n\nvar setupDividers = require('./setup_dividers');\nvar setupDocument = require('./setup_document');\nvar setupFilesBar = require('./setup_files_bar');\nvar setupInterval = require('./setup_interval');\nvar setupModuleContainer = require('./setup_module_container');\nvar setupTabContainer = require('./setup_tab_container');\nvar setupSideMenu = require('./setup_side_menu');\nvar setupTopMenu = require('./setup_top_menu');\nvar setupWindow = require('./setup_window');\n\n/**\n * Initializes elements once the app loads in the DOM.\n */\nvar setup = function setup() {\n\n  $('.btn input').click(function (e) {\n    e.stopPropagation();\n  });\n\n  // dividers\n  setupDividers();\n\n  // document\n  setupDocument();\n\n  // files bar\n  setupFilesBar();\n\n  // interval\n  setupInterval();\n\n  // module container\n  setupModuleContainer();\n\n  // tab container\n  setupTabContainer();\n\n  // side menu\n  setupSideMenu();\n\n  // top menu\n  setupTopMenu();\n\n  // window\n  setupWindow();\n};\n\nmodule.exports = {\n  setup: setup\n};\n\n},{\"./setup_dividers\":17,\"./setup_document\":18,\"./setup_files_bar\":19,\"./setup_interval\":20,\"./setup_module_container\":21,\"./setup_side_menu\":22,\"./setup_tab_container\":23,\"./setup_top_menu\":24,\"./setup_window\":25}],17:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar app = require('../../app');\nvar resizeWorkspace = require('../resize_workspace');\n\nvar addDividerToDom = function addDividerToDom(divider) {\n  var _divider = _slicedToArray(divider, 3),\n      vertical = _divider[0],\n      $first = _divider[1],\n      $second = _divider[2];\n\n  var $parent = $first.parent();\n  var thickness = 5;\n\n  var $divider = $('<div class=\"divider\">');\n\n  var dragging = false;\n  if (vertical === 'v') {\n    $divider.addClass('vertical');\n    var _left = -thickness / 2;\n    $divider.css({\n      top: 0,\n      bottom: 0,\n      left: _left,\n      width: thickness\n    });\n\n    var x = void 0;\n    $divider.mousedown(function (_ref) {\n      var pageX = _ref.pageX;\n\n      x = pageX;\n      dragging = true;\n    });\n\n    $(document).mousemove(function (_ref2) {\n      var pageX = _ref2.pageX;\n\n      if (dragging) {\n        var new_left = $second.position().left + pageX - x;\n        var percent = new_left / $parent.width() * 100;\n        percent = Math.min(90, Math.max(10, percent));\n        $first.css('right', 100 - percent + '%');\n        $second.css('left', percent + '%');\n        x = pageX;\n        resizeWorkspace();\n      }\n    });\n\n    $(document).mouseup(function (e) {\n      dragging = false;\n    });\n  } else {\n    $divider.addClass('horizontal');\n    var _top = -thickness / 2;\n    $divider.css({\n      top: _top,\n      height: thickness,\n      left: 0,\n      right: 0\n    });\n\n    var y = void 0;\n    $divider.mousedown(function (_ref3) {\n      var pageY = _ref3.pageY;\n\n      y = pageY;\n      dragging = true;\n    });\n\n    $(document).mousemove(function (_ref4) {\n      var pageY = _ref4.pageY;\n\n      if (dragging) {\n        var new_top = $second.position().top + pageY - y;\n        var percent = new_top / $parent.height() * 100;\n        percent = Math.min(90, Math.max(10, percent));\n        $first.css('bottom', 100 - percent + '%');\n        $second.css('top', percent + '%');\n        y = pageY;\n        resizeWorkspace();\n      }\n    });\n\n    $(document).mouseup(function (e) {\n      dragging = false;\n    });\n  }\n\n  $second.append($divider);\n};\n\nmodule.exports = function () {\n  var dividers = [['v', $('.sidemenu'), $('.workspace')], ['v', $('.viewer_container'), $('.editor_container')], ['h', $('.data_container'), $('.code_container')]];\n  for (var i = 0; i < dividers.length; i++) {\n    addDividerToDom(dividers[i]);\n  }\n};\n\n},{\"../../app\":3,\"../resize_workspace\":15}],18:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\n\nmodule.exports = function () {\n  $(document).on('click', 'a', function (e) {\n    var href = $(this).attr('href');\n    if (/^(https?:\\/\\/).+/.test(href)) {\n      e.preventDefault();\n      if (!window.open(href, '_blank')) {\n        alert('Please allow popups for this site');\n      }\n    }\n  });\n\n  $(document).mouseup(function (e) {\n    app.getTracerManager().command('mouseup', e);\n  });\n};\n\n},{\"../../app\":3}],19:[function(require,module,exports){\n'use strict';\n\nvar definitelyBigger = function definitelyBigger(x, y) {\n  return x > y + 2;\n};\n\nmodule.exports = function () {\n\n  $('.files_bar > .btn-left').click(function () {\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var scrollLeft = $wrapper.scrollLeft();\n\n    $($wrapper.children('button').get().reverse()).each(function () {\n      var left = $(this).position().left;\n      var right = left + $(this).outerWidth();\n      if (0 > left) {\n        $wrapper.scrollLeft(scrollLeft + right - clipWidth);\n        return false;\n      }\n    });\n  });\n\n  $('.files_bar > .btn-right').click(function () {\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var scrollLeft = $wrapper.scrollLeft();\n\n    $wrapper.children('button').each(function () {\n      var left = $(this).position().left;\n      var right = left + $(this).outerWidth();\n      if (clipWidth < right) {\n        $wrapper.scrollLeft(scrollLeft + left);\n        return false;\n      }\n    });\n  });\n\n  $('.files_bar > .wrapper').scroll(function () {\n\n    var $wrapper = $('.files_bar > .wrapper');\n    var clipWidth = $wrapper.width();\n    var $left = $wrapper.children('button:first-child');\n    var $right = $wrapper.children('button:last-child');\n    var left = $left.position().left;\n    var right = $right.position().left + $right.outerWidth();\n\n    if (definitelyBigger(0, left) && definitelyBigger(clipWidth, right)) {\n      var scrollLeft = $wrapper.scrollLeft();\n      $wrapper.scrollLeft(scrollLeft + clipWidth - right);\n      return;\n    }\n\n    var lefter = definitelyBigger(0, left);\n    var righter = definitelyBigger(right, clipWidth);\n    $wrapper.toggleClass('shadow-left', lefter);\n    $wrapper.toggleClass('shadow-right', righter);\n    $('.files_bar > .btn-left').attr('disabled', !lefter);\n    $('.files_bar > .btn-right').attr('disabled', !righter);\n  });\n};\n\n},{}],20:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar app = require('../../app');\nvar Toast = require('../toast');\n\nvar parseFloat = Number.parseFloat;\n\n\nvar minInterval = 0.1;\nvar maxInterval = 10;\nvar startInterval = 0.5;\nvar stepInterval = 0.1;\n\nvar normalize = function normalize(sec) {\n\n  var interval = void 0;\n  var message = void 0;\n  if (sec < minInterval) {\n    interval = minInterval;\n    message = 'Interval of ' + sec + ' seconds is too low. Setting to min allowed interval of ' + minInterval + ' second(s).';\n  } else if (sec > maxInterval) {\n    interval = maxInterval;\n    message = 'Interval of ' + sec + ' seconds is too high. Setting to max allowed interval of ' + maxInterval + ' second(s).';\n  } else {\n    interval = sec;\n    message = 'Interval has been set to ' + sec + ' second(s).';\n  }\n\n  return [interval, message];\n};\n\nmodule.exports = function () {\n\n  var $interval = $('#interval');\n  $interval.val(startInterval);\n  $interval.attr({\n    max: maxInterval,\n    min: minInterval,\n    step: stepInterval\n  });\n\n  $('#interval').on('change', function () {\n    var tracerManager = app.getTracerManager();\n\n    var _normalize = normalize(parseFloat($(this).val())),\n        _normalize2 = _slicedToArray(_normalize, 2),\n        seconds = _normalize2[0],\n        message = _normalize2[1];\n\n    $(this).val(seconds);\n    tracerManager.interval = seconds * 1000;\n    Toast.showInfoToast(message);\n  });\n};\n\n},{\"../../app\":3,\"../toast\":31}],21:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\n\nmodule.exports = function () {\n\n  var $module_container = $('.module_container');\n\n  $module_container.on('mousedown', '.module_wrapper', function (e) {\n    app.getTracerManager().findOwner(this).mousedown(e);\n  });\n\n  $module_container.on('mousemove', '.module_wrapper', function (e) {\n    app.getTracerManager().findOwner(this).mousemove(e);\n  });\n\n  $module_container.on('DOMMouseScroll mousewheel', '.module_wrapper', function (e) {\n    app.getTracerManager().findOwner(this).mousewheel(e);\n  });\n};\n\n},{\"../../app\":3}],22:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\nvar Server = require('../../server');\nvar showAlgorithm = require('../show_algorithm');\nvar resizeWorkspace = require('../resize_workspace');\n\nvar sidemenu_percent = void 0;\n\nmodule.exports = function () {\n  $('#navigation').click(function () {\n    var $sidemenu = $('.sidemenu');\n    var $workspace = $('.workspace');\n\n    $sidemenu.toggleClass('active');\n\n    $('.nav-dropdown').toggleClass('fa-caret-down fa-caret-right');\n    if ($sidemenu.hasClass('active')) {\n      $sidemenu.animate({ \"right\": 100 - sidemenu_percent + '%' }, \"fast\");\n      $workspace.animate({ \"left\": sidemenu_percent + '%' }, \"fast\");\n    } else {\n      sidemenu_percent = $workspace.position().left / $('body').width() * 100;\n      $sidemenu.animate({ \"right\": \"0%\" }, \"fast\");\n      $workspace.animate({ \"left\": \"0%\" }, \"fast\");\n    }\n\n    resizeWorkspace();\n  });\n\n  $('#documentation').click(function () {\n    $('#btn_doc').click();\n  });\n\n  $('#powered-by').click(function () {\n    $(this).toggleClass('open');\n    $('#powered-by-list').toggle(300);\n  });\n\n  $('#scratch-paper').click(function () {\n    var category = 'scratch';\n    var algorithm = app.getLoadedScratch();\n    Server.loadAlgorithm(category, algorithm).then(function (data) {\n      showAlgorithm(category, algorithm, data);\n    });\n  });\n};\n\n},{\"../../app\":3,\"../../server\":64,\"../resize_workspace\":15,\"../show_algorithm\":26}],23:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function () {\n  $('.tab_bar > button').click(function () {\n    $('.tab_bar > button').removeClass('active');\n    $('.tab_container > .tab').removeClass('active');\n    $(this).addClass('active');\n    $($(this).attr('data-target')).addClass('active');\n  });\n};\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\nvar Server = require('../../server');\nvar Toast = require('../toast');\nvar TopMenu = require('../top_menu');\nvar create = require('../../create');\n\nmodule.exports = function () {\n\n  // shared\n  $('#shared').mouseup(function () {\n    $(this).select();\n  });\n\n  $('#btn_share').click(function () {\n\n    var $icon = $(this).find('.fa-share');\n    $icon.addClass('fa-spin fa-spin-faster');\n\n    Server.shareScratchPaper().then(function (url) {\n      $icon.removeClass('fa-spin fa-spin-faster');\n      $('#shared').removeClass('collapse');\n      $('#shared').val(url);\n      Toast.showInfoToast('Shareable link is created.');\n    });\n  });\n\n  // control\n\n  var $btnRun = $('#btn_run');\n  var $btnTrace = $('#btn_trace');\n  var $btnPause = $('#btn_pause');\n  var $btnPrev = $('#btn_prev');\n  var $btnNext = $('#btn_next');\n  var $btnGenerate = $('#btn_generate');\n\n  // initially, control buttons are disabled\n  TopMenu.disableFlowControl();\n\n  $btnRun.click(function () {\n    $btnTrace.click();\n    $btnPause.removeClass('active');\n    $btnRun.addClass('active');\n    TopMenu.enableFlowControl();\n    var err = app.getEditor().execute();\n    if (err) {\n      console.error(err);\n      Toast.showErrorToast(err);\n      TopMenu.resetTopMenuButtons();\n    }\n  });\n\n  $btnPause.click(function () {\n    $btnRun.toggleClass('active');\n    $btnPause.toggleClass('active');\n    if (app.getTracerManager().isPause()) {\n      app.getTracerManager().resumeStep();\n    } else {\n      app.getTracerManager().pauseStep();\n    }\n  });\n\n  $btnPrev.click(function () {\n    $btnRun.removeClass('active');\n    $btnPause.addClass('active');\n    app.getTracerManager().pauseStep();\n    app.getTracerManager().prevStep();\n  });\n\n  $btnNext.click(function () {\n    $btnRun.removeClass('active');\n    $btnPause.addClass('active');\n    app.getTracerManager().pauseStep();\n    app.getTracerManager().nextStep();\n  });\n\n  $btnGenerate.click(function () {\n    create.init();\n  });\n};\n\n},{\"../../app\":3,\"../../create\":6,\"../../server\":64,\"../toast\":31,\"../top_menu\":32}],25:[function(require,module,exports){\n'use strict';\n\nvar app = require('../../app');\n\nmodule.exports = function () {\n  $(window).resize(function () {\n    app.getTracerManager().resize();\n  });\n};\n\n},{\"../../app\":3}],26:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\nvar utils = require('../utils');\nvar showDescription = require('./show_description');\nvar addFiles = require('./add_files');\n\nmodule.exports = function (category, algorithm, data, requestedFile) {\n  var $menu = void 0;\n  var category_name = void 0;\n  var algorithm_name = void 0;\n\n  if (utils.isScratchPaper(category)) {\n    $menu = $('#scratch-paper');\n    category_name = 'Scratch Paper';\n    algorithm_name = algorithm ? 'Shared' : 'Temporary';\n  } else {\n    $menu = $('[data-category=\"' + category + '\"][data-algorithm=\"' + algorithm + '\"]');\n    var categoryObj = app.getCategory(category);\n    category_name = categoryObj.name;\n    algorithm_name = categoryObj.list[algorithm];\n  }\n\n  $('.sidemenu button').removeClass('active');\n  $menu.addClass('active');\n\n  $('#category').html(category_name);\n  $('#algorithm').html(algorithm_name);\n  $('#tab_desc > .wrapper').empty();\n  $('.files_bar > .wrapper').empty();\n  $('#explanation').html('');\n\n  app.setLastFileUsed(null);\n  app.getEditor().clearContent();\n\n  var files = data.files;\n\n\n  delete data.files;\n\n  showDescription(data);\n  addFiles(category, algorithm, files, requestedFile);\n  utils.renderMathJax();\n};\n\n},{\"../app\":3,\"../utils\":78,\"./add_files\":9,\"./show_description\":27}],27:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar isArray = Array.isArray;\nvar _$ = $,\n    each = _$.each;\n\n\nmodule.exports = function (data) {\n  var $container = $('#tab_desc > .wrapper');\n  $container.empty();\n\n  each(data, function (key, value) {\n\n    if (key) {\n      $container.append($('<h3>').html(key));\n    }\n\n    if (typeof value === 'string') {\n      $container.append($('<p>').html(value));\n    } else if (isArray(value)) {\n\n      var $ul = $('<ul class=\"applications\">');\n      $container.append($ul);\n\n      value.forEach(function (li) {\n        $ul.append($('<li>').html(li));\n      });\n    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\n      var _$ul = $('<ul class=\"complexities\">');\n      $container.append(_$ul);\n\n      each(value, function (prop) {\n        var $wrapper = $('<div class=\"complexity\">');\n        var $type = $('<span class=\"complexity-type\">').html(prop + ': ');\n        var $value = $('<span class=\"complexity-value\">').html('' + value[prop]);\n\n        $wrapper.append($type).append($value);\n\n        _$ul.append($('<li>').append($wrapper));\n      });\n    }\n  });\n};\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\n// click the first algorithm in the first category\n\nmodule.exports = function () {\n  $('#list .category').first().click();\n  $('#list .category + .algorithms > .indent').first().click();\n};\n\n},{}],29:[function(require,module,exports){\n'use strict';\n\nvar Server = require('../server');\nvar showAlgorithm = require('./show_algorithm');\n\nmodule.exports = function (category, algorithm, file) {\n  $('.category[data-category=\"' + category + '\"]').click();\n  Server.loadAlgorithm(category, algorithm).then(function (data) {\n    showAlgorithm(category, algorithm, data, file);\n\n    window.setTimeout(function () {\n      $('#btn_run').trigger('click');\n      window.postMessage(JSON.stringify({ status: 'loading' }));\n    }, 500);\n  });\n};\n\n},{\"../server\":64,\"./show_algorithm\":26}],30:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\nvar Server = require('../server');\nvar converter = new showdown.Converter({ tables: true });\n\nmodule.exports = function (wiki) {\n  Server.loadWiki(wiki).then(function (data) {\n    $('#tab_doc > .wrapper').html(converter.makeHtml('#' + wiki + '\\n' + data));\n    $('#tab_doc').scrollTop(0);\n    $('#tab_doc > .wrapper a').click(function (e) {\n      var href = $(this).attr('href');\n      if (app.hasWiki(href)) {\n        e.preventDefault();\n        module.exports(href);\n      }\n    });\n  });\n};\n\n},{\"../app\":3,\"../server\":64}],31:[function(require,module,exports){\n'use strict';\n\nvar showToast = function showToast(data, type) {\n  var $toast = $('<div class=\"toast ' + type + '\">').append(data);\n\n  $('.toast_container').append($toast);\n  setTimeout(function () {\n    $toast.fadeOut(function () {\n      $toast.remove();\n    });\n  }, 3000);\n};\n\nvar showErrorToast = function showErrorToast(err) {\n  showToast(err, 'error');\n};\n\nvar showInfoToast = function showInfoToast(err) {\n  showToast(err, 'info');\n};\n\nmodule.exports = {\n  showErrorToast: showErrorToast,\n  showInfoToast: showInfoToast\n};\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\n\nvar flowControlBtns = [$('#btn_pause'), $('#btn_prev'), $('#btn_next')];\nvar setFlowControlState = function setFlowControlState(isDisabled) {\n  flowControlBtns.forEach(function ($btn) {\n    return $btn.attr('disabled', isDisabled);\n  });\n};\n\nvar enableFlowControl = function enableFlowControl() {\n  setFlowControlState(false);\n};\n\nvar disableFlowControl = function disableFlowControl() {\n  setFlowControlState(true);\n};\n\nvar resetTopMenuButtons = function resetTopMenuButtons() {\n  $('.top-menu-buttons button').removeClass('active');\n  disableFlowControl();\n  app.getEditor().unhighlightLine();\n};\n\nvar setInterval = function setInterval(val) {\n  $('#interval').val(interval);\n};\n\nvar activateBtnPause = function activateBtnPause() {\n  $('#btn_pause').addClass('active');\n};\n\nvar deactivateBtnPause = function deactivateBtnPause() {\n  $('#btn_pause').removeClass('active');\n};\n\nmodule.exports = {\n  enableFlowControl: enableFlowControl,\n  disableFlowControl: disableFlowControl,\n  resetTopMenuButtons: resetTopMenuButtons,\n  setInterval: setInterval,\n  activateBtnPause: activateBtnPause,\n  deactivateBtnPause: deactivateBtnPause\n};\n\n},{\"../app\":3}],33:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function (id) {\n  var editor = ace.edit(id);\n\n  editor.setOptions({\n    enableBasicAutocompletion: true,\n    enableSnippets: true,\n    enableLiveAutocompletion: true\n  });\n\n  editor.setTheme('ace/theme/tomorrow_night_eighties');\n  editor.session.setMode('ace/mode/javascript');\n  editor.$blockScrolling = Infinity;\n\n  return editor;\n};\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nvar execute = function execute(tracerManager, code, dataLines) {\n  // all modules available to eval are obtained from window\n  try {\n    tracerManager.deallocateAll();\n    var lines = code.split('\\n');\n    var newLines = [];\n    lines.forEach(function (line, i) {\n      newLines.push(line.replace(/(.+\\. *_wait *)(\\( *\\))/g, '$1(' + (i - dataLines) + ')'));\n    });\n    eval(Babel.transform(newLines.join('\\n'), { presets: ['es2015'] }).code);\n    tracerManager.visualize();\n  } catch (err) {\n    return err;\n  } finally {\n    tracerManager.removeUnallocated();\n  }\n};\n\nvar executeData = function executeData(tracerManager, algoData) {\n  return execute(tracerManager, algoData);\n};\n\nvar executeDataAndCode = function executeDataAndCode(tracerManager, algoData, algoCode) {\n  var dataLines = algoData.split('\\n').length;\n  return execute(tracerManager, algoData + '\\n' + algoCode, dataLines);\n};\n\nmodule.exports = {\n  executeData: executeData,\n  executeDataAndCode: executeDataAndCode\n};\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\nvar createEditor = require('./create');\nvar Executor = require('./executor');\nvar TopMenu = require('../dom/top_menu');\n\nfunction Editor(tracerManager) {\n  var _this = this;\n\n  if (!tracerManager) {\n    throw 'Cannot create Editor. Missing the tracerManager';\n  }\n\n  ace.require('ace/ext/language_tools');\n  var Range = ace.require(\"ace/range\").Range;\n\n  this.dataEditor = createEditor('data');\n  this.codeEditor = createEditor('code');\n\n  // Setting data\n\n  this.setData = function (data) {\n    _this.dataEditor.setValue(data, -1);\n  };\n\n  this.setCode = function (code) {\n    _this.codeEditor.setValue(code, -1);\n  };\n\n  this.setContent = function (_ref) {\n    var data = _ref.data,\n        code = _ref.code;\n\n    _this.setData(data);\n    _this.setCode(code);\n  };\n\n  // Clearing data\n\n  this.clearData = function () {\n    _this.dataEditor.setValue('');\n  };\n\n  this.clearCode = function () {\n    _this.codeEditor.setValue('');\n  };\n\n  this.clearContent = function () {\n    _this.clearData();\n    _this.clearCode();\n  };\n\n  this.execute = function () {\n    var data = _this.dataEditor.getValue();\n    var code = _this.codeEditor.getValue();\n    return Executor.executeDataAndCode(tracerManager, data, code);\n  };\n\n  this.highlightLine = function (lineNumber) {\n    var session = _this.codeEditor.getSession();\n    if (_this.marker) session.removeMarker(_this.marker);\n    _this.marker = session.addMarker(new Range(lineNumber, 0, lineNumber, Infinity), \"executing\", \"line\", true);\n  };\n\n  this.unhighlightLine = function () {\n    var session = _this.codeEditor.getSession();\n    if (_this.marker) session.removeMarker(_this.marker);\n  };\n\n  this.resize = function () {\n    _this.dataEditor.resize();\n    _this.codeEditor.resize();\n  };\n\n  // listeners\n\n  this.dataEditor.on('change', function () {\n    var data = _this.dataEditor.getValue();\n    var lastFileUsed = app.getLastFileUsed();\n    if (lastFileUsed) {\n      app.updateCachedFile(lastFileUsed, {\n        data: data\n      });\n    }\n    Executor.executeData(tracerManager, data);\n    TopMenu.resetTopMenuButtons();\n  });\n\n  this.codeEditor.on('change', function () {\n    var code = _this.codeEditor.getValue();\n    var lastFileUsed = app.getLastFileUsed();\n    if (lastFileUsed) {\n      app.updateCachedFile(lastFileUsed, {\n        code: code\n      });\n    }\n    tracerManager.reset();\n    TopMenu.resetTopMenuButtons();\n  });\n}\n\nmodule.exports = Editor;\n\n},{\"../app\":3,\"../dom/top_menu\":32,\"./create\":33,\"./executor\":34}],36:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('./app');\nvar AppConstructor = require('./app/constructor');\nvar DOM = require('./dom');\nvar Server = require('./server');\nvar modules = require('./module');\n\nvar _$ = $,\n    extend = _$.extend;\n\n\n$.ajaxSetup({\n  cache: false,\n  dataType: 'text'\n});\n\nvar _require = require('./utils'),\n    isScratchPaper = _require.isScratchPaper;\n\nvar _require2 = require('./server/helpers'),\n    getHashValue = _require2.getHashValue,\n    getParameterByName = _require2.getParameterByName,\n    getPath = _require2.getPath;\n\n// set global promise error handler\n\n\nRSVP.on('error', function (reason) {\n  console.assert(false, reason);\n});\n\n$(function () {\n  // initialize the application and attach in to the instance module\n  var appConstructor = new AppConstructor();\n  extend(true, app, appConstructor);\n\n  // load modules to the global scope so they can be evaled\n  extend(true, window, modules);\n\n  Server.loadCategories().then(function (data) {\n    app.setCategories(data);\n    DOM.addCategories();\n\n    window.postMessage(JSON.stringify({\n      status: 'ready'\n    }));\n\n    $(window).on('bridge.run', function () {\n      DOM.showRequestedAlgorithm(window.algorithm.category, window.algorithm.algorithm, window.algorithm.file);\n    });\n  });\n\n  var v1LoadedScratch = getHashValue('scratch-paper');\n  var v2LoadedScratch = getParameterByName('scratch-paper');\n  var vLoadedScratch = v1LoadedScratch || v2LoadedScratch;\n  if (vLoadedScratch) {\n    window.location.href = window.location.protocol + '//' + window.location.host + window.location.pathname + '#path=scratch/' + vLoadedScratch;\n  }\n});\n\n},{\"./app\":3,\"./app/constructor\":2,\"./dom\":12,\"./module\":46,\"./server\":64,\"./server/helpers\":63,\"./utils\":78,\"rsvp\":80}],37:[function(require,module,exports){\n'use strict';\n\nvar Array2D = require('./array2d');\n\nvar random = function random(N, min, max) {\n  return Array2D.random(1, N, min, max)[0];\n};\n\nvar randomSorted = function randomSorted(N, min, max) {\n  return Array2D.randomSorted(1, N, min, max)[0];\n};\n\nmodule.exports = {\n  random: random,\n  randomSorted: randomSorted\n};\n\n},{\"./array2d\":38}],38:[function(require,module,exports){\n'use strict';\n\nvar Integer = require('./integer');\n\nvar random = function random(N, M, min, max) {\n  if (!N) N = 10;\n  if (!M) M = 10;\n  if (min === undefined) min = 1;\n  if (max === undefined) max = 9;\n  var D = [];\n  for (var i = 0; i < N; i++) {\n    D.push([]);\n    for (var j = 0; j < M; j++) {\n      D[i].push(Integer.random(min, max));\n    }\n  }\n  return D;\n};\n\nvar randomSorted = function randomSorted(N, M, min, max) {\n  return random(N, M, min, max).map(function (arr) {\n    return arr.sort(function (a, b) {\n      return a - b;\n    });\n  });\n};\n\nmodule.exports = {\n  random: random,\n  randomSorted: randomSorted\n};\n\n},{\"./integer\":42}],39:[function(require,module,exports){\n'use strict';\n\nvar Integer = require('./integer');\n\nvar random = function random(N, min, max) {\n  if (!N) N = 7;\n  if (!min) min = 1;\n  if (!max) max = 10;\n  var C = new Array(N);\n  for (var i = 0; i < N; i++) {\n    C[i] = new Array(2);\n  }for (var i = 0; i < N; i++) {\n    for (var j = 0; j < C[i].length; j++) {\n      C[i][j] = Integer.random(min, max);\n    }\n  }return C;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{\"./integer\":42}],40:[function(require,module,exports){\n'use strict';\n\nvar random = function random(N, ratio) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n    for (var j = 0; j < N; j++) {\n      if (i != j) {\n        G[i][j] = (Math.random() * (1 / ratio) | 0) == 0 ? 1 : 0;\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],41:[function(require,module,exports){\n'use strict';\n\nvar Integer = require('./integer');\nvar Array1D = require('./array1d');\nvar Array2D = require('./array2d');\nvar CoordinateSystem = require('./coordinate_system');\nvar DirectedGraph = require('./directed_graph');\nvar UndirectedGraph = require('./undirected_graph');\nvar WeightedDirectedGraph = require('./weighted_directed_graph');\nvar WeightedUndirectedGraph = require('./weighted_undirected_graph');\n\nmodule.exports = {\n  Integer: Integer,\n  Array1D: Array1D,\n  Array2D: Array2D,\n  CoordinateSystem: CoordinateSystem,\n  DirectedGraph: DirectedGraph,\n  UndirectedGraph: UndirectedGraph,\n  WeightedDirectedGraph: WeightedDirectedGraph,\n  WeightedUndirectedGraph: WeightedUndirectedGraph\n};\n\n},{\"./array1d\":37,\"./array2d\":38,\"./coordinate_system\":39,\"./directed_graph\":40,\"./integer\":42,\"./undirected_graph\":43,\"./weighted_directed_graph\":44,\"./weighted_undirected_graph\":45}],42:[function(require,module,exports){\n'use strict';\n\nvar random = function random(min, max) {\n  return (Math.random() * (max - min + 1) | 0) + min;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\nvar random = function random(N, ratio) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n  }for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (i > j) {\n        G[i][j] = G[j][i] = (Math.random() * (1 / ratio) | 0) == 0 ? 1 : 0;\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{}],44:[function(require,module,exports){\n'use strict';\n\nvar Integer = require('./integer');\n\nvar random = function random(N, ratio, min, max) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  if (!min) min = 1;\n  if (!max) max = 5;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n    for (var j = 0; j < N; j++) {\n      if (i != j && (Math.random() * (1 / ratio) | 0) == 0) {\n        G[i][j] = Integer.random(min, max);\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{\"./integer\":42}],45:[function(require,module,exports){\n'use strict';\n\nvar Integer = require('./integer');\n\nvar random = function random(N, ratio, min, max) {\n  if (!N) N = 5;\n  if (!ratio) ratio = .3;\n  if (!min) min = 1;\n  if (!max) max = 5;\n  var G = new Array(N);\n  for (var i = 0; i < N; i++) {\n    G[i] = new Array(N);\n  }for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (i > j && (Math.random() * (1 / ratio) | 0) == 0) {\n        G[i][j] = G[j][i] = Integer.random(min, max);\n      }\n    }\n  }\n  return G;\n};\n\nmodule.exports = {\n  random: random\n};\n\n},{\"./integer\":42}],46:[function(require,module,exports){\n'use strict';\n\nvar tracers = require('./tracer');\nvar datas = require('./data');\n\nvar _$ = $,\n    extend = _$.extend;\n\n\nmodule.exports = extend(true, {}, tracers, datas);\n\n},{\"./data\":41,\"./tracer\":53}],47:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Array2DTracer = require('./array2d');\n\nvar Array1DTracer = function (_Array2DTracer) {\n  _inherits(Array1DTracer, _Array2DTracer);\n\n  _createClass(Array1DTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'Array1DTracer';\n    }\n  }]);\n\n  function Array1DTracer(name) {\n    _classCallCheck(this, Array1DTracer);\n\n    return _possibleConstructorReturn(this, (Array1DTracer.__proto__ || Object.getPrototypeOf(Array1DTracer)).call(this, name));\n  }\n\n  _createClass(Array1DTracer, [{\n    key: '_notify',\n    value: function _notify(idx, v) {\n      _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), '_notify', this).call(this, 0, idx, v);\n      return this;\n    }\n  }, {\n    key: '_denotify',\n    value: function _denotify(idx) {\n      _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), '_denotify', this).call(this, 0, idx);\n      return this;\n    }\n  }, {\n    key: '_select',\n    value: function _select(s, e) {\n      if (e === undefined) {\n        _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), '_select', this).call(this, 0, s);\n      } else {\n        _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), '_selectRow', this).call(this, 0, s, e);\n      }\n      return this;\n    }\n  }, {\n    key: '_deselect',\n    value: function _deselect(s, e) {\n      if (e === undefined) {\n        _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), '_deselect', this).call(this, 0, s);\n      } else {\n        _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), '_deselectRow', this).call(this, 0, s, e);\n      }\n      return this;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), 'processStep', this).call(this, step, options);\n      if (this.chartTracer) {\n        var newStep = $.extend(true, {}, step);\n        newStep.capsule = this.chartTracer.capsule;\n        newStep.s = newStep.sy;\n        newStep.e = newStep.ey;\n        if (newStep.s === undefined) newStep.s = newStep.y;\n        delete newStep.x;\n        delete newStep.y;\n        delete newStep.sx;\n        delete newStep.sy;\n        delete newStep.ex;\n        delete newStep.ey;\n        this.chartTracer.processStep(newStep, options);\n      }\n    }\n  }, {\n    key: 'setData',\n    value: function setData(D) {\n      return _get(Array1DTracer.prototype.__proto__ || Object.getPrototypeOf(Array1DTracer.prototype), 'setData', this).call(this, [D]);\n    }\n  }]);\n\n  return Array1DTracer;\n}(Array2DTracer);\n\nmodule.exports = Array1DTracer;\n\n},{\"./array2d\":48}],48:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Tracer = require('./tracer');\n\nvar _require = require('../../tracer_manager/util/index'),\n    refineByType = _require.refineByType;\n\nvar Array2DTracer = function (_Tracer) {\n  _inherits(Array2DTracer, _Tracer);\n\n  _createClass(Array2DTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'Array2DTracer';\n    }\n  }]);\n\n  function Array2DTracer(name) {\n    _classCallCheck(this, Array2DTracer);\n\n    var _this = _possibleConstructorReturn(this, (Array2DTracer.__proto__ || Object.getPrototypeOf(Array2DTracer)).call(this, name));\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(Array2DTracer, [{\n    key: '_notify',\n    value: function _notify(x, y, v) {\n      this.manager.pushStep(this.capsule, {\n        type: 'notify',\n        x: x,\n        y: y,\n        v: v\n      });\n      return this;\n    }\n  }, {\n    key: '_denotify',\n    value: function _denotify(x, y) {\n      this.manager.pushStep(this.capsule, {\n        type: 'denotify',\n        x: x,\n        y: y\n      });\n      return this;\n    }\n  }, {\n    key: '_select',\n    value: function _select(sx, sy, ex, ey) {\n      this.pushSelectingStep('select', null, arguments);\n      return this;\n    }\n  }, {\n    key: '_selectRow',\n    value: function _selectRow(x, sy, ey) {\n      this.pushSelectingStep('select', 'row', arguments);\n      return this;\n    }\n  }, {\n    key: '_selectCol',\n    value: function _selectCol(y, sx, ex) {\n      this.pushSelectingStep('select', 'col', arguments);\n      return this;\n    }\n  }, {\n    key: '_deselect',\n    value: function _deselect(sx, sy, ex, ey) {\n      this.pushSelectingStep('deselect', null, arguments);\n      return this;\n    }\n  }, {\n    key: '_deselectRow',\n    value: function _deselectRow(x, sy, ey) {\n      this.pushSelectingStep('deselect', 'row', arguments);\n      return this;\n    }\n  }, {\n    key: '_deselectCol',\n    value: function _deselectCol(y, sx, ex) {\n      this.pushSelectingStep('deselect', 'col', arguments);\n      return this;\n    }\n  }, {\n    key: '_separate',\n    value: function _separate(x, y) {\n      this.manager.pushStep(this.capsule, {\n        type: 'separate',\n        x: x,\n        y: y\n      });\n      return this;\n    }\n  }, {\n    key: '_separateRow',\n    value: function _separateRow(x) {\n      this._separate(x, -1);\n      return this;\n    }\n  }, {\n    key: '_separateCol',\n    value: function _separateCol(y) {\n      this._separate(-1, y);\n      return this;\n    }\n  }, {\n    key: '_deseparate',\n    value: function _deseparate(x, y) {\n      this.manager.pushStep(this.capsule, {\n        type: 'deseparate',\n        x: x,\n        y: y\n      });\n      return this;\n    }\n  }, {\n    key: '_deseparateRow',\n    value: function _deseparateRow(x) {\n      this._deseparate(x, -1);\n      return this;\n    }\n  }, {\n    key: '_deseparateCol',\n    value: function _deseparateCol(y) {\n      this._deseparate(-1, y);\n      return this;\n    }\n  }, {\n    key: 'pushSelectingStep',\n    value: function pushSelectingStep() {\n      var args = Array.prototype.slice.call(arguments);\n      var type = args.shift();\n      var mode = args.shift();\n      args = Array.prototype.slice.call(args.shift());\n      var coord;\n      switch (mode) {\n        case 'row':\n          coord = {\n            x: args[0],\n            sy: args[1],\n            ey: args[2]\n          };\n          break;\n        case 'col':\n          coord = {\n            y: args[0],\n            sx: args[1],\n            ex: args[2]\n          };\n          break;\n        default:\n          if (args[2] === undefined && args[3] === undefined) {\n            coord = {\n              x: args[0],\n              y: args[1]\n            };\n          } else {\n            coord = {\n              sx: args[0],\n              sy: args[1],\n              ex: args[2],\n              ey: args[3]\n            };\n          }\n      }\n      var step = {\n        type: type\n      };\n      $.extend(step, coord);\n      this.manager.pushStep(this.capsule, step);\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      switch (step.type) {\n        case 'notify':\n          if (step.v !== undefined) {\n            var $row = this.$table.find('.mtbl-row').eq(step.x);\n            var $col = $row.find('.mtbl-col').eq(step.y);\n            $col.text(refineByType(step.v));\n          }\n        case 'denotify':\n        case 'select':\n        case 'deselect':\n          var color = step.type == 'select' || step.type == 'deselect' ? this.color.selected : this.color.notified;\n          var paint = step.type == 'select' || step.type == 'notify';\n          var sx = step.sx;\n          var sy = step.sy;\n          var ex = step.ex;\n          var ey = step.ey;\n          if (sx === undefined) sx = step.x;\n          if (sy === undefined) sy = step.y;\n          if (ex === undefined) ex = step.x;\n          if (ey === undefined) ey = step.y;\n          this.paintColor(sx, sy, ex, ey, color, paint);\n          break;\n        case 'separate':\n          this.deseparate(step.x, step.y);\n          this.separate(step.x, step.y);\n          break;\n        case 'deseparate':\n          this.deseparate(step.x, step.y);\n          break;\n        default:\n          _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'processStep', this).call(this, step, options);\n      }\n    }\n  }, {\n    key: 'setData',\n    value: function setData(D) {\n      this.viewX = this.viewY = 0;\n      this.paddingH = 6;\n      this.paddingV = 3;\n      this.fontSize = 16;\n\n      if (_get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'setData', this).apply(this, arguments)) {\n        this.$table.find('.mtbl-row').each(function (i) {\n          $(this).find('.mtbl-col').each(function (j) {\n            $(this).text(refineByType(D[i][j]));\n          });\n        });\n        return true;\n      }\n\n      this.$table.empty();\n      for (var i = 0; i < D.length; i++) {\n        var $row = $('<div class=\"mtbl-row\">');\n        this.$table.append($row);\n        for (var j = 0; j < D[i].length; j++) {\n          var $col = $('<div class=\"mtbl-col\">').css(this.getCellCss()).text(refineByType(D[i][j]));\n          $row.append($col);\n        }\n      }\n      this.resize();\n\n      return false;\n    }\n  }, {\n    key: 'resize',\n    value: function resize() {\n      _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'resize', this).call(this);\n\n      this.refresh();\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'clear', this).call(this);\n\n      this.clearColor();\n      this.deseparateAll();\n    }\n  }, {\n    key: 'getCellCss',\n    value: function getCellCss() {\n      return {\n        padding: this.paddingV.toFixed(1) + 'px ' + this.paddingH.toFixed(1) + 'px',\n        'font-size': this.fontSize.toFixed(1) + 'px'\n      };\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'refresh', this).call(this);\n\n      var $parent = this.$table.parent();\n      var top = $parent.height() / 2 - this.$table.height() / 2 + this.viewY;\n      var left = $parent.width() / 2 - this.$table.width() / 2 + this.viewX;\n      this.$table.css('margin-top', top);\n      this.$table.css('margin-left', left);\n    }\n  }, {\n    key: 'mousedown',\n    value: function mousedown(e) {\n      _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'mousedown', this).call(this, e);\n\n      this.dragX = e.pageX;\n      this.dragY = e.pageY;\n      this.dragging = true;\n    }\n  }, {\n    key: 'mousemove',\n    value: function mousemove(e) {\n      _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'mousemove', this).call(this, e);\n\n      if (this.dragging) {\n        this.viewX += e.pageX - this.dragX;\n        this.viewY += e.pageY - this.dragY;\n        this.dragX = e.pageX;\n        this.dragY = e.pageY;\n        this.refresh();\n      }\n    }\n  }, {\n    key: 'mouseup',\n    value: function mouseup(e) {\n      _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'mouseup', this).call(this, e);\n\n      this.dragging = false;\n    }\n  }, {\n    key: 'mousewheel',\n    value: function mousewheel(e) {\n      _get(Array2DTracer.prototype.__proto__ || Object.getPrototypeOf(Array2DTracer.prototype), 'mousewheel', this).call(this, e);\n\n      e.preventDefault();\n      e = e.originalEvent;\n      var delta = e.wheelDelta !== undefined && e.wheelDelta || e.detail !== undefined && -e.detail;\n      var weight = 1.01;\n      var ratio = delta > 0 ? 1 / weight : weight;\n      if (this.fontSize < 4 && ratio < 1) return;\n      if (this.fontSize > 40 && ratio > 1) return;\n      this.paddingV *= ratio;\n      this.paddingH *= ratio;\n      this.fontSize *= ratio;\n      this.$table.find('.mtbl-col').css(this.getCellCss());\n      this.refresh();\n    }\n  }, {\n    key: 'paintColor',\n    value: function paintColor(sx, sy, ex, ey, color, paint) {\n      for (var i = sx; i <= ex; i++) {\n        var $row = this.$table.find('.mtbl-row').eq(i);\n        for (var j = sy; j <= ey; j++) {\n          var $col = $row.find('.mtbl-col').eq(j);\n          if (paint) $col.css('background', color);else $col.css('background', '');\n        }\n      }\n    }\n  }, {\n    key: 'clearColor',\n    value: function clearColor() {\n      this.$table.find('.mtbl-col').css('background', '');\n    }\n  }, {\n    key: 'separate',\n    value: function separate(x, y) {\n      this.$table.find('.mtbl-row').each(function (i) {\n        var $row = $(this);\n        if (i == x) {\n          $row.after($('<div class=\"mtbl-empty-row\">').attr('data-row', i));\n        }\n        $row.find('.mtbl-col').each(function (j) {\n          var $col = $(this);\n          if (j == y) {\n            $col.after($('<div class=\"mtbl-empty-col\">').attr('data-col', j));\n          }\n        });\n      });\n    }\n  }, {\n    key: 'deseparate',\n    value: function deseparate(x, y) {\n      this.$table.find('[data-row=' + x + ']').remove();\n      this.$table.find('[data-col=' + y + ']').remove();\n    }\n  }, {\n    key: 'deseparateAll',\n    value: function deseparateAll() {\n      this.$table.find('.mtbl-empty-row, .mtbl-empty-col').remove();\n    }\n  }]);\n\n  return Array2DTracer;\n}(Tracer);\n\nvar initView = function initView(tracer) {\n  tracer.$table = tracer.capsule.$table = $('<div class=\"mtbl-table\">');\n  tracer.$container.append(tracer.$table);\n};\n\nmodule.exports = Array2DTracer;\n\n},{\"../../tracer_manager/util/index\":75,\"./tracer\":55}],49:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Tracer = require('./tracer');\n\nvar ChartTracer = function (_Tracer) {\n  _inherits(ChartTracer, _Tracer);\n\n  _createClass(ChartTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'ChartTracer';\n    }\n  }]);\n\n  function ChartTracer(name) {\n    _classCallCheck(this, ChartTracer);\n\n    var _this = _possibleConstructorReturn(this, (ChartTracer.__proto__ || Object.getPrototypeOf(ChartTracer)).call(this, name));\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(ChartTracer, [{\n    key: 'setData',\n    value: function setData(C) {\n      if (_get(ChartTracer.prototype.__proto__ || Object.getPrototypeOf(ChartTracer.prototype), 'setData', this).apply(this, arguments)) {\n        this.chart.config.data.datasets[0].data = C;\n        this.chart.update();\n        return true;\n      }\n\n      var color = [];\n      for (var i = 0; i < C.length; i++) {\n        color.push(this.color.default);\n      }this.chart.config.data = {\n        labels: C.map(String),\n        datasets: [{\n          backgroundColor: color,\n          data: C\n        }]\n      };\n      this.chart.update();\n    }\n  }, {\n    key: '_notify',\n    value: function _notify(s, v) {\n      this.manager.pushStep(this.capsule, {\n        type: 'notify',\n        s: s,\n        v: v\n      });\n      return this;\n    }\n  }, {\n    key: '_denotify',\n    value: function _denotify(s) {\n      this.manager.pushStep(this.capsule, {\n        type: 'denotify',\n        s: s\n      });\n      return this;\n    }\n  }, {\n    key: '_select',\n    value: function _select(s, e) {\n      this.manager.pushStep(this.capsule, {\n        type: 'select',\n        s: s,\n        e: e\n      });\n      return this;\n    }\n  }, {\n    key: '_deselect',\n    value: function _deselect(s, e) {\n      this.manager.pushStep(this.capsule, {\n        type: 'deselect',\n        s: s,\n        e: e\n      });\n      return this;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      switch (step.type) {\n        case 'notify':\n          if (step.v !== undefined) {\n            this.chart.config.data.datasets[0].data[step.s] = step.v;\n            this.chart.config.data.labels[step.s] = step.v.toString();\n          }\n        case 'denotify':\n        case 'select':\n        case 'deselect':\n          var color = step.type == 'notify' ? this.color.notified : step.type == 'select' ? this.color.selected : this.color.default;\n          if (step.e !== undefined) for (var i = step.s; i <= step.e; i++) {\n            this.chart.config.data.datasets[0].backgroundColor[i] = color;\n          } else this.chart.config.data.datasets[0].backgroundColor[step.s] = color;\n          this.chart.update();\n          break;\n        default:\n          _get(ChartTracer.prototype.__proto__ || Object.getPrototypeOf(ChartTracer.prototype), 'processStep', this).call(this, step, options);\n      }\n    }\n  }, {\n    key: 'resize',\n    value: function resize() {\n      _get(ChartTracer.prototype.__proto__ || Object.getPrototypeOf(ChartTracer.prototype), 'resize', this).call(this);\n\n      this.chart.resize();\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      _get(ChartTracer.prototype.__proto__ || Object.getPrototypeOf(ChartTracer.prototype), 'clear', this).call(this);\n\n      var data = this.chart.config.data;\n      if (data.datasets.length) {\n        var backgroundColor = data.datasets[0].backgroundColor;\n        for (var i = 0; i < backgroundColor.length; i++) {\n          backgroundColor[i] = this.color.default;\n        }\n        this.chart.update();\n      }\n    }\n  }]);\n\n  return ChartTracer;\n}(Tracer);\n\nvar initView = function initView(tracer) {\n  tracer.$wrapper = tracer.capsule.$wrapper = $('<canvas class=\"mchrt-chart\">');\n  tracer.$container.append(tracer.$wrapper);\n  tracer.chart = tracer.capsule.chart = new Chart(tracer.$wrapper, {\n    type: 'bar',\n    data: {\n      labels: [],\n      datasets: []\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      },\n      animation: false,\n      legend: false,\n      responsive: true,\n      maintainAspectRatio: false\n    }\n  });\n};\n\nmodule.exports = ChartTracer;\n\n},{\"./tracer\":55}],50:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DirectedGraphTracer = require('./directed_graph');\n\nvar CoordinateSystemTracer = function (_DirectedGraphTracer) {\n  _inherits(CoordinateSystemTracer, _DirectedGraphTracer);\n\n  _createClass(CoordinateSystemTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'CoordinateSystemTracer';\n    }\n  }]);\n\n  function CoordinateSystemTracer(name) {\n    _classCallCheck(this, CoordinateSystemTracer);\n\n    var _this = _possibleConstructorReturn(this, (CoordinateSystemTracer.__proto__ || Object.getPrototypeOf(CoordinateSystemTracer)).call(this, name));\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(CoordinateSystemTracer, [{\n    key: 'setData',\n    value: function setData(C) {\n      if (Tracer.prototype.setData.apply(this, arguments)) return true;\n\n      this.graph.clear();\n      var nodes = [];\n      var edges = [];\n      for (var i = 0; i < C.length; i++) {\n        nodes.push({\n          id: this.n(i),\n          x: C[i][0],\n          y: C[i][1],\n          label: '' + i,\n          size: 1\n        });\n      }this.graph.read({\n        nodes: nodes,\n        edges: edges\n      });\n      this.s.camera.goTo({\n        x: 0,\n        y: 0,\n        angle: 0,\n        ratio: 1\n      });\n      this.refresh();\n\n      return false;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      switch (step.type) {\n        case 'visit':\n        case 'leave':\n          var visit = step.type == 'visit';\n          var targetNode = this.graph.nodes(this.n(step.target));\n          var color = visit ? this.color.visited : this.color.left;\n          targetNode.color = color;\n          if (step.source !== undefined) {\n            var edgeId = this.e(step.source, step.target);\n            if (this.graph.edges(edgeId)) {\n              var edge = this.graph.edges(edgeId);\n              edge.color = color;\n              this.graph.dropEdge(edgeId).addEdge(edge);\n            } else {\n              this.graph.addEdge({\n                id: this.e(step.target, step.source),\n                source: this.n(step.source),\n                target: this.n(step.target),\n                size: 1\n              });\n            }\n          }\n          if (this.logTracer) {\n            var source = step.source;\n            if (source === undefined) source = '';\n            this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n          }\n          break;\n        default:\n          _get(CoordinateSystemTracer.prototype.__proto__ || Object.getPrototypeOf(CoordinateSystemTracer.prototype), 'processStep', this).call(this, step, options);\n      }\n    }\n  }, {\n    key: 'e',\n    value: function e(v1, v2) {\n      if (v1 > v2) {\n        var temp = v1;\n        v1 = v2;\n        v2 = temp;\n      }\n      return 'e' + v1 + '_' + v2;\n    }\n  }, {\n    key: 'drawOnHover',\n    value: function drawOnHover(node, context, settings, next) {\n      var tracer = this;\n\n      context.setLineDash([5, 5]);\n      var nodeIdx = node.id.substring(1);\n      this.graph.edges().forEach(function (edge) {\n        var ends = edge.id.substring(1).split(\"_\");\n        if (ends[0] == nodeIdx) {\n          var color = '#0ff';\n          var source = node;\n          var target = tracer.graph.nodes('n' + ends[1]);\n          tracer.drawEdge(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        } else if (ends[1] == nodeIdx) {\n          var color = '#0ff';\n          var source = tracer.graph.nodes('n' + ends[0]);\n          var target = node;\n          tracer.drawEdge(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        }\n      });\n    }\n  }, {\n    key: 'drawEdge',\n    value: function drawEdge(edge, source, target, color, context, settings) {\n      var prefix = settings('prefix') || '',\n          size = edge[prefix + 'size'] || 1;\n\n      context.strokeStyle = color;\n      context.lineWidth = size;\n      context.beginPath();\n      context.moveTo(source[prefix + 'x'], source[prefix + 'y']);\n      context.lineTo(target[prefix + 'x'], target[prefix + 'y']);\n      context.stroke();\n    }\n  }]);\n\n  return CoordinateSystemTracer;\n}(DirectedGraphTracer);\n\nvar initView = function initView(tracer) {\n  tracer.s.settings({\n    defaultEdgeType: 'def',\n    funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n      var color = tracer.getColor(edge, source, target, settings);\n      tracer.drawEdge(edge, source, target, color, context, settings);\n    }\n  });\n};\n\nmodule.exports = CoordinateSystemTracer;\n\n},{\"./directed_graph\":51}],51:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Tracer = require('./tracer');\n\nvar _require = require('../../tracer_manager/util/index'),\n    refineByType = _require.refineByType;\n\nvar DirectedGraphTracer = function (_Tracer) {\n  _inherits(DirectedGraphTracer, _Tracer);\n\n  _createClass(DirectedGraphTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'DirectedGraphTracer';\n    }\n  }]);\n\n  function DirectedGraphTracer(name) {\n    _classCallCheck(this, DirectedGraphTracer);\n\n    var _this = _possibleConstructorReturn(this, (DirectedGraphTracer.__proto__ || Object.getPrototypeOf(DirectedGraphTracer)).call(this, name));\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(DirectedGraphTracer, [{\n    key: '_setTreeData',\n    value: function _setTreeData(G, root) {\n      this.manager.pushStep(this.capsule, {\n        type: 'setTreeData',\n        arguments: arguments\n      });\n      return this;\n    }\n  }, {\n    key: '_visit',\n    value: function _visit(target, source) {\n      this.manager.pushStep(this.capsule, {\n        type: 'visit',\n        target: target,\n        source: source\n      });\n      return this;\n    }\n  }, {\n    key: '_leave',\n    value: function _leave(target, source) {\n      this.manager.pushStep(this.capsule, {\n        type: 'leave',\n        target: target,\n        source: source\n      });\n      return this;\n    }\n  }, {\n    key: '_setNodePositions',\n    value: function _setNodePositions(positions) {\n      this.manager.pushStep(this.capsule, {\n        type: 'setNodePositions',\n        positions: positions\n      });\n      return this;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      switch (step.type) {\n        case 'setTreeData':\n          this.setTreeData.apply(this, step.arguments);\n          break;\n        case 'setNodePositions':\n          $.each(this.graph.nodes(), function (i, node) {\n            if (i >= step.positions.length) return false;\n            var position = step.positions[i];\n            node.x = position.x;\n            node.y = position.y;\n          });\n          break;\n        case 'visit':\n        case 'leave':\n          var visit = step.type == 'visit';\n          var targetNode = this.graph.nodes(this.n(step.target));\n          var color = visit ? this.color.visited : this.color.left;\n          targetNode.color = color;\n          if (step.source !== undefined) {\n            var edgeId = this.e(step.source, step.target);\n            var edge = this.graph.edges(edgeId);\n            edge.color = color;\n            this.graph.dropEdge(edgeId).addEdge(edge);\n          }\n          if (this.logTracer) {\n            var source = step.source;\n            if (source === undefined) source = '';\n            this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n          }\n          break;\n        default:\n          _get(DirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphTracer.prototype), 'processStep', this).call(this, step, options);\n      }\n    }\n  }, {\n    key: 'setTreeData',\n    value: function setTreeData(G, root, undirected) {\n      var tracer = this;\n\n      root = root || 0;\n      var maxDepth = -1;\n\n      var chk = new Array(G.length);\n      var getDepth = function getDepth(node, depth) {\n        if (chk[node]) throw \"the given graph is not a tree because it forms a circuit\";\n        chk[node] = true;\n        if (maxDepth < depth) maxDepth = depth;\n        for (var i = 0; i < G[node].length; i++) {\n          if (G[node][i]) getDepth(i, depth + 1);\n        }\n      };\n      getDepth(root, 1);\n\n      if (this.setData(G, undirected)) return true;\n\n      var place = function place(node, x, y) {\n        var temp = tracer.graph.nodes(tracer.n(node));\n        temp.x = x;\n        temp.y = y;\n      };\n\n      var wgap = 1 / (maxDepth - 1);\n      var dfs = function dfs(node, depth, top, bottom) {\n        place(node, top + bottom, depth * wgap);\n        var children = 0;\n        for (var i = 0; i < G[node].length; i++) {\n          if (G[node][i]) children++;\n        }\n        var vgap = (bottom - top) / children;\n        var cnt = 0;\n        for (var i = 0; i < G[node].length; i++) {\n          if (G[node][i]) dfs(i, depth + 1, top + vgap * cnt, top + vgap * ++cnt);\n        }\n      };\n      dfs(root, 0, 0, 1);\n\n      this.refresh();\n    }\n  }, {\n    key: 'setData',\n    value: function setData(G, undirected) {\n      if (_get(DirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphTracer.prototype), 'setData', this).apply(this, arguments)) return true;\n      this.graph.clear();\n      var nodes = [];\n      var edges = [];\n      var unitAngle = 2 * Math.PI / G.length;\n      var currentAngle = 0;\n      for (var i = 0; i < G.length; i++) {\n        currentAngle += unitAngle;\n        nodes.push({\n          id: this.n(i),\n          label: '' + i,\n          x: .5 + Math.sin(currentAngle) / 2,\n          y: .5 + Math.cos(currentAngle) / 2,\n          size: 1,\n          color: this.color.default,\n          weight: 0\n        });\n\n        if (undirected) {\n          for (var j = 0; j <= i; j++) {\n            var value = G[i][j] || G[j][i];\n            if (value) {\n              edges.push({\n                id: this.e(i, j),\n                source: this.n(i),\n                target: this.n(j),\n                color: this.color.default,\n                size: 1,\n                weight: refineByType(value)\n              });\n            }\n          }\n        } else {\n          for (var _j = 0; _j < G[i].length; _j++) {\n            if (G[i][_j]) {\n              edges.push({\n                id: this.e(i, _j),\n                source: this.n(i),\n                target: this.n(_j),\n                color: this.color.default,\n                size: 1,\n                weight: refineByType(G[i][_j])\n              });\n            }\n          }\n        }\n      }\n\n      this.graph.read({\n        nodes: nodes,\n        edges: edges\n      });\n      this.s.camera.goTo({\n        x: 0,\n        y: 0,\n        angle: 0,\n        ratio: 1\n      });\n      this.refresh();\n\n      return false;\n    }\n  }, {\n    key: 'resize',\n    value: function resize() {\n      _get(DirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphTracer.prototype), 'resize', this).call(this);\n\n      this.s.renderers[0].resize();\n      this.refresh();\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      _get(DirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphTracer.prototype), 'refresh', this).call(this);\n\n      this.s.refresh();\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      _get(DirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphTracer.prototype), 'clear', this).call(this);\n\n      this.clearGraphColor();\n      this.refresh();\n    }\n  }, {\n    key: 'clearGraphColor',\n    value: function clearGraphColor() {\n      var tracer = this;\n\n      this.graph.nodes().forEach(function (node) {\n        node.color = tracer.color.default;\n      });\n      this.graph.edges().forEach(function (edge) {\n        edge.color = tracer.color.default;\n      });\n    }\n  }, {\n    key: 'n',\n    value: function n(v) {\n      return 'n' + v;\n    }\n  }, {\n    key: 'e',\n    value: function e(v1, v2) {\n      return 'e' + v1 + '_' + v2;\n    }\n  }, {\n    key: 'getColor',\n    value: function getColor(edge, source, target, settings) {\n      var color = edge.color,\n          edgeColor = settings('edgeColor'),\n          defaultNodeColor = settings('defaultNodeColor'),\n          defaultEdgeColor = settings('defaultEdgeColor');\n      if (!color) switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n      return color;\n    }\n  }, {\n    key: 'drawLabel',\n    value: function drawLabel(node, context, settings) {\n      var fontSize,\n          prefix = settings('prefix') || '',\n          size = node[prefix + 'size'];\n\n      if (size < settings('labelThreshold')) return;\n\n      if (!node.label || typeof node.label !== 'string') return;\n\n      fontSize = settings('labelSize') === 'fixed' ? settings('defaultLabelSize') : settings('labelSizeRatio') * size;\n\n      context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') + fontSize + 'px ' + settings('font');\n      context.fillStyle = settings('labelColor') === 'node' ? node.color || settings('defaultNodeColor') : settings('defaultLabelColor');\n\n      context.textAlign = 'center';\n      context.fillText(node.label, Math.round(node[prefix + 'x']), Math.round(node[prefix + 'y'] + fontSize / 3));\n    }\n  }, {\n    key: 'drawArrow',\n    value: function drawArrow(edge, source, target, color, context, settings) {\n      var prefix = settings('prefix') || '',\n          size = edge[prefix + 'size'] || 1,\n          tSize = target[prefix + 'size'],\n          sX = source[prefix + 'x'],\n          sY = source[prefix + 'y'],\n          tX = target[prefix + 'x'],\n          tY = target[prefix + 'y'],\n          angle = Math.atan2(tY - sY, tX - sX),\n          dist = 3;\n      sX += Math.sin(angle) * dist;\n      tX += Math.sin(angle) * dist;\n      sY += -Math.cos(angle) * dist;\n      tY += -Math.cos(angle) * dist;\n      var aSize = Math.max(size * 2.5, settings('minArrowSize')),\n          d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n          aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n          aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n          vX = (tX - sX) * aSize / d,\n          vY = (tY - sY) * aSize / d;\n\n      context.strokeStyle = color;\n      context.lineWidth = size;\n      context.beginPath();\n      context.moveTo(sX, sY);\n      context.lineTo(aX, aY);\n      context.stroke();\n\n      context.fillStyle = color;\n      context.beginPath();\n      context.moveTo(aX + vX, aY + vY);\n      context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n      context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n      context.lineTo(aX + vX, aY + vY);\n      context.closePath();\n      context.fill();\n    }\n  }, {\n    key: 'drawOnHover',\n    value: function drawOnHover(node, context, settings, next) {\n      var tracer = this;\n\n      context.setLineDash([5, 5]);\n      var nodeIdx = node.id.substring(1);\n      this.graph.edges().forEach(function (edge) {\n        var ends = edge.id.substring(1).split(\"_\");\n        if (ends[0] == nodeIdx) {\n          var color = '#0ff';\n          var source = node;\n          var target = tracer.graph.nodes('n' + ends[1]);\n          tracer.drawArrow(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        } else if (ends[1] == nodeIdx) {\n          var color = '#ff0';\n          var source = tracer.graph.nodes('n' + ends[0]);\n          var target = node;\n          tracer.drawArrow(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        }\n      });\n    }\n  }]);\n\n  return DirectedGraphTracer;\n}(Tracer);\n\nvar initView = function initView(tracer) {\n  tracer.s = tracer.capsule.s = new sigma({\n    renderer: {\n      container: tracer.$container[0],\n      type: 'canvas'\n    },\n    settings: {\n      minArrowSize: 8,\n      defaultEdgeType: 'arrow',\n      maxEdgeSize: 2.5,\n      labelThreshold: 4,\n      font: 'Roboto',\n      defaultLabelColor: '#fff',\n      zoomMin: 0.6,\n      zoomMax: 1.2,\n      skipErrors: true,\n      minNodeSize: .5,\n      maxNodeSize: 12,\n      labelSize: 'proportional',\n      labelSizeRatio: 1.3,\n      funcLabelsDef: function funcLabelsDef(node, context, settings) {\n        tracer.drawLabel(node, context, settings);\n      },\n      funcHoversDef: function funcHoversDef(node, context, settings, next) {\n        tracer.drawOnHover(node, context, settings, next);\n      },\n      funcEdgesArrow: function funcEdgesArrow(edge, source, target, context, settings) {\n        var color = tracer.getColor(edge, source, target, settings);\n        tracer.drawArrow(edge, source, target, color, context, settings);\n      }\n    }\n  });\n  sigma.plugins.dragNodes(tracer.s, tracer.s.renderers[0]);\n  tracer.graph = tracer.capsule.graph = tracer.s.graph;\n};\n\nsigma.canvas.labels.def = function (node, context, settings) {\n  var func = settings('funcLabelsDef');\n  if (func) {\n    func(node, context, settings);\n  }\n};\nsigma.canvas.hovers.def = function (node, context, settings) {\n  var func = settings('funcHoversDef');\n  if (func) {\n    func(node, context, settings);\n  }\n};\nsigma.canvas.edges.def = function (edge, source, target, context, settings) {\n  var func = settings('funcEdgesDef');\n  if (func) {\n    func(edge, source, target, context, settings);\n  }\n};\nsigma.canvas.edges.arrow = function (edge, source, target, context, settings) {\n  var func = settings('funcEdgesArrow');\n  if (func) {\n    func(edge, source, target, context, settings);\n  }\n};\n\nmodule.exports = DirectedGraphTracer;\n\n},{\"../../tracer_manager/util/index\":75,\"./tracer\":55}],52:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Tracer = require('./tracer');\n\nvar _require = require('../../tracer_manager/util/index'),\n    refineByType = _require.refineByType;\n\nvar DirectedGraphConstructTracer = function (_Tracer) {\n  _inherits(DirectedGraphConstructTracer, _Tracer);\n\n  _createClass(DirectedGraphConstructTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'DirectedGraphConstructTracer';\n    }\n  }]);\n\n  function DirectedGraphConstructTracer(name) {\n    var nodePlacement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, DirectedGraphConstructTracer);\n\n    var _this = _possibleConstructorReturn(this, (DirectedGraphConstructTracer.__proto__ || Object.getPrototypeOf(DirectedGraphConstructTracer)).call(this, name));\n\n    _this.nodePlacement = nodePlacement;\n    _this.nodeCollection = [];\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(DirectedGraphConstructTracer, [{\n    key: '_addRoot',\n    value: function _addRoot(root) {\n      this.manager.pushStep(this.capsule, {\n        type: 'addRoot',\n        arguments: arguments\n      });\n      return this;\n    }\n  }, {\n    key: '_addNode',\n    value: function _addNode(element) {\n      var parentElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      this.manager.pushStep(this.capsule, {\n        type: 'addNode',\n        arguments: arguments\n      });\n      return this;\n    }\n  }, {\n    key: '_findNode',\n    value: function _findNode(val) {\n      var idToFind = this.n(val);\n      var G = this.nodeCollection;\n      var result = null;\n      for (var i = 0; i < G.length; i++) {\n        if (G[i].id === idToFind) {\n          result = G[i];\n          break;\n        }\n      }\n      return result;\n    }\n  }, {\n    key: '_visit',\n    value: function _visit(target, source) {\n      this.manager.pushStep(this.capsule, {\n        type: 'visit',\n        target: target,\n        source: source\n      });\n      return this;\n    }\n  }, {\n    key: '_leave',\n    value: function _leave(target, source) {\n      this.manager.pushStep(this.capsule, {\n        type: 'leave',\n        target: target,\n        source: source\n      });\n      return this;\n    }\n  }, {\n    key: '_setNodePositions',\n    value: function _setNodePositions(positions) {\n      this.manager.pushStep(this.capsule, {\n        type: 'setNodePositions',\n        positions: positions\n      });\n      return this;\n    }\n  }, {\n    key: '_clearTraversal',\n    value: function _clearTraversal() {\n      this.manager.pushStep(this.capsule, {\n        type: 'clear'\n      });\n      return this;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      switch (step.type) {\n        case 'clear':\n          this.clear.apply(this);\n          break;\n        case 'setNodePositions':\n          $.each(this.graph.nodes(), function (i, node) {\n            if (i >= step.positions.length) return false;\n            var position = step.positions[i];\n            node.x = position.x;\n            node.y = position.y;\n          });\n          break;\n        case 'addRoot':\n          this.addRoot.apply(this, step.arguments);\n          break;\n        case 'addNode':\n          this.addNode.apply(this, step.arguments);\n          break;\n        case 'visit':\n        case 'leave':\n          var visit = step.type == 'visit';\n          var nodeObject = this._findNode(step.target);\n          nodeObject.visited = visit;\n          nodeObject.isNew = false;\n          var targetNode = this.graph.nodes(this.n(step.target));\n          var color = visit ? this.color.visited : this.color.left;\n          if (targetNode) {\n            targetNode.color = color;\n            if (step.source !== undefined) {\n              var edgeId = this.e(step.source, step.target);\n              var edge = this.graph.edges(edgeId);\n              edge.color = color;\n              this.graph.dropEdge(edgeId).addEdge(edge);\n            }\n          }\n          if (this.logTracer) {\n            var source = step.source;\n            if (source === undefined) source = '';\n            this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n          }\n          break;\n        default:\n          _get(DirectedGraphConstructTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphConstructTracer.prototype), 'processStep', this).call(this, step, options);\n      }\n    }\n  }, {\n    key: 'addRoot',\n    value: function addRoot(root) {\n      if (this.rootObject) throw 'Root for this graph is already added';\n      this.rootObject = this.createGraphNode(root);\n      this.drawGraph(this.rootObject.level);\n    }\n  }, {\n    key: 'addNode',\n    value: function addNode(node, parent) {\n      var nodeObject = this.createGraphNode(node, parent);\n      this.drawGraph(nodeObject.level);\n    }\n  }, {\n    key: 'createGraphNode',\n    value: function createGraphNode(node, parent) {\n      var nodeObject = this.nodeConstruct(node);\n      var parentObject = this._findNode(parent);\n      if (parentObject) {\n        nodeObject.parent = parentObject;\n        nodeObject.level = parentObject.level + 1;\n        if (this.nodePlacement === null) {\n          parentObject.children.push(nodeObject);\n        } else if (this.nodePlacement === 0) {\n          var isSpliced = false;\n          var insertIndex = 0;\n          if (parentObject.children.length > 0) {\n            for (var i = 0; i < parentObject.children.length; i++) {\n              var child = parentObject.children[i];\n              if (child.originalVal > node) {\n                isSpliced = true;\n                break;\n              }\n              insertIndex++;\n            }\n          }\n          if (isSpliced) {\n            parentObject.children.splice(insertIndex, 0, nodeObject);\n          } else {\n            parentObject.children.push(nodeObject);\n          }\n        }\n      }\n      this.nodeCollection.push(nodeObject);\n      return nodeObject;\n    }\n  }, {\n    key: 'nodeConstruct',\n    value: function nodeConstruct(val) {\n      var nodeObject = {\n        id: this.n(val),\n        originalVal: val,\n        isNew: true,\n        visited: false,\n        children: [],\n        level: 1,\n        parent: null\n      };\n      return nodeObject;\n    }\n  }, {\n    key: 'drawGraph',\n    value: function drawGraph(nodeLevel) {\n      var nodes = [];\n      var edges = [];\n      var tracer = this;\n\n      var arrangeChildNodes = function arrangeChildNodes(node, offsetWidth) {\n        if (node.children.length > 1) {\n          var midPoint = Math.floor(node.children.length / 2);\n          for (var i = 0; i < node.children.length; i++) {\n            if (i === midPoint) {\n              offsetWidth += node.children.length % 2 === 0 ? 1 : 0;\n              addGraphNode(node, offsetWidth);\n            }\n            offsetWidth = arrangeChildNodes(node.children[i], offsetWidth);\n            addEdge(node, node.children[i]);\n          }\n        } else {\n          if (node.children.length === 0) {\n            offsetWidth += 1;\n          } else {\n            offsetWidth = arrangeChildNodes(node.children[0], offsetWidth);\n            addEdge(node, node.children[0]);\n          }\n          addGraphNode(node, offsetWidth);\n        }\n        return offsetWidth;\n      };\n\n      var addGraphNode = function addGraphNode(node, calculatedX) {\n        var color = getColor(node.isNew, node.visited, tracer.color);\n        nodes.push({\n          id: node.id,\n          label: '' + node.originalVal,\n          x: calculatedX,\n          y: node.level - 1,\n          size: 1,\n          color: color,\n          weight: 0\n        });\n      };\n\n      var addEdge = function addEdge(node, childNode) {\n        var color = getColor(node.visited && childNode.isNew, node.visited && childNode.visited, tracer.color);\n        edges.push({\n          id: tracer.e(node.originalVal, childNode.originalVal),\n          source: node.id,\n          target: childNode.id,\n          color: color,\n          size: 1,\n          weight: refineByType(childNode.originalVal)\n        });\n      };\n\n      var getColor = function getColor(isNew, isVisited, colorPalete) {\n        return isNew ? colorPalete.selected : isVisited ? colorPalete.visited : colorPalete.default;\n      };\n      arrangeChildNodes(this.rootObject, 0);\n\n      this.graph.clear();\n      this.graph.read({\n        nodes: nodes,\n        edges: edges\n      });\n      this.s.camera.goTo({\n        x: 0,\n        y: nodeLevel,\n        angle: 0,\n        ratio: 1\n      });\n      this.refresh();\n\n      return false;\n    }\n  }, {\n    key: 'resize',\n    value: function resize() {\n      _get(DirectedGraphConstructTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphConstructTracer.prototype), 'resize', this).call(this);\n\n      this.s.renderers[0].resize();\n      this.refresh();\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      _get(DirectedGraphConstructTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphConstructTracer.prototype), 'refresh', this).call(this);\n\n      this.s.refresh();\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      _get(DirectedGraphConstructTracer.prototype.__proto__ || Object.getPrototypeOf(DirectedGraphConstructTracer.prototype), 'clear', this).call(this);\n\n      this.clearGraphColor();\n      this.refresh();\n    }\n  }, {\n    key: 'clearGraphColor',\n    value: function clearGraphColor() {\n      var tracer = this;\n      this.nodeCollection.forEach(function (node) {\n        node.visited = node.isNew = false;\n      });\n\n      this.graph.nodes().forEach(function (node) {\n        node.color = tracer.color.default;\n      });\n      this.graph.edges().forEach(function (edge) {\n        edge.color = tracer.color.default;\n      });\n    }\n  }, {\n    key: 'n',\n    value: function n(v) {\n      return 'n' + v;\n    }\n  }, {\n    key: 'e',\n    value: function e(v1, v2) {\n      return 'e' + v1 + '_' + v2;\n    }\n  }, {\n    key: 'getColor',\n    value: function getColor(edge, source, target, settings) {\n      var color = edge.color,\n          edgeColor = settings('edgeColor'),\n          defaultNodeColor = settings('defaultNodeColor'),\n          defaultEdgeColor = settings('defaultEdgeColor');\n      if (!color) switch (edgeColor) {\n        case 'source':\n          color = source.color || defaultNodeColor;\n          break;\n        case 'target':\n          color = target.color || defaultNodeColor;\n          break;\n        default:\n          color = defaultEdgeColor;\n          break;\n      }\n\n      return color;\n    }\n  }, {\n    key: 'drawLabel',\n    value: function drawLabel(node, context, settings) {\n      var fontSize,\n          prefix = settings('prefix') || '',\n          size = node[prefix + 'size'];\n\n      if (size < settings('labelThreshold')) return;\n\n      if (!node.label || typeof node.label !== 'string') return;\n\n      fontSize = settings('labelSize') === 'fixed' ? settings('defaultLabelSize') : settings('labelSizeRatio') * size;\n\n      context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') + fontSize + 'px ' + settings('font');\n      context.fillStyle = settings('labelColor') === 'node' ? node.color || settings('defaultNodeColor') : settings('defaultLabelColor');\n\n      context.textAlign = 'center';\n      context.fillText(node.label, Math.round(node[prefix + 'x']), Math.round(node[prefix + 'y'] + fontSize / 3));\n    }\n  }, {\n    key: 'drawArrow',\n    value: function drawArrow(edge, source, target, color, context, settings) {\n      var prefix = settings('prefix') || '',\n          size = edge[prefix + 'size'] || 1,\n          tSize = target[prefix + 'size'],\n          sX = source[prefix + 'x'],\n          sY = source[prefix + 'y'],\n          tX = target[prefix + 'x'],\n          tY = target[prefix + 'y'],\n          angle = Math.atan2(tY - sY, tX - sX),\n          dist = 3;\n      sX += Math.sin(angle) * dist;\n      tX += Math.sin(angle) * dist;\n      sY += -Math.cos(angle) * dist;\n      tY += -Math.cos(angle) * dist;\n      var aSize = Math.max(size * 2.5, settings('minArrowSize')),\n          d = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2)),\n          aX = sX + (tX - sX) * (d - aSize - tSize) / d,\n          aY = sY + (tY - sY) * (d - aSize - tSize) / d,\n          vX = (tX - sX) * aSize / d,\n          vY = (tY - sY) * aSize / d;\n\n      context.strokeStyle = color;\n      context.lineWidth = size;\n      context.beginPath();\n      context.moveTo(sX, sY);\n      context.lineTo(aX, aY);\n      context.stroke();\n\n      context.fillStyle = color;\n      context.beginPath();\n      context.moveTo(aX + vX, aY + vY);\n      context.lineTo(aX + vY * 0.6, aY - vX * 0.6);\n      context.lineTo(aX - vY * 0.6, aY + vX * 0.6);\n      context.lineTo(aX + vX, aY + vY);\n      context.closePath();\n      context.fill();\n    }\n  }, {\n    key: 'drawOnHover',\n    value: function drawOnHover(node, context, settings, next) {\n      var tracer = this;\n\n      context.setLineDash([5, 5]);\n      var nodeIdx = node.id.substring(1);\n      this.graph.edges().forEach(function (edge) {\n        var ends = edge.id.substring(1).split(\"_\");\n        if (ends[0] == nodeIdx) {\n          var color = '#0ff';\n          var source = node;\n          var target = tracer.graph.nodes('n' + ends[1]);\n          tracer.drawArrow(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        } else if (ends[1] == nodeIdx) {\n          var color = '#ff0';\n          var source = tracer.graph.nodes('n' + ends[0]);\n          var target = node;\n          tracer.drawArrow(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        }\n      });\n    }\n  }]);\n\n  return DirectedGraphConstructTracer;\n}(Tracer);\n\nvar initView = function initView(tracer) {\n  tracer.s = tracer.capsule.s = new sigma({\n    renderer: {\n      container: tracer.$container[0],\n      type: 'canvas'\n    },\n    settings: {\n      minArrowSize: 8,\n      defaultEdgeType: 'arrow',\n      maxEdgeSize: 2.5,\n      labelThreshold: 4,\n      font: 'Roboto',\n      defaultLabelColor: '#fff',\n      zoomMin: 0.6,\n      zoomMax: 1.2,\n      skipErrors: true,\n      minNodeSize: .5,\n      maxNodeSize: 12,\n      labelSize: 'proportional',\n      labelSizeRatio: 1.3,\n      funcLabelsDef: function funcLabelsDef(node, context, settings) {\n        tracer.drawLabel(node, context, settings);\n      },\n      funcHoversDef: function funcHoversDef(node, context, settings, next) {\n        tracer.drawOnHover(node, context, settings, next);\n      },\n      funcEdgesArrow: function funcEdgesArrow(edge, source, target, context, settings) {\n        var color = tracer.getColor(edge, source, target, settings);\n        tracer.drawArrow(edge, source, target, color, context, settings);\n      }\n    }\n  });\n  sigma.plugins.dragNodes(tracer.s, tracer.s.renderers[0]);\n  tracer.graph = tracer.capsule.graph = tracer.s.graph;\n};\n\nsigma.canvas.labels.def = function (node, context, settings) {\n  var func = settings('funcLabelsDef');\n  if (func) {\n    func(node, context, settings);\n  }\n};\nsigma.canvas.hovers.def = function (node, context, settings) {\n  var func = settings('funcHoversDef');\n  if (func) {\n    func(node, context, settings);\n  }\n};\nsigma.canvas.edges.def = function (edge, source, target, context, settings) {\n  var func = settings('funcEdgesDef');\n  if (func) {\n    func(edge, source, target, context, settings);\n  }\n};\nsigma.canvas.edges.arrow = function (edge, source, target, context, settings) {\n  var func = settings('funcEdgesArrow');\n  if (func) {\n    func(edge, source, target, context, settings);\n  }\n};\n\nmodule.exports = DirectedGraphConstructTracer;\n\n},{\"../../tracer_manager/util/index\":75,\"./tracer\":55}],53:[function(require,module,exports){\n'use strict';\n\nvar Tracer = require('./tracer');\nvar LogTracer = require('./log');\nvar Array1DTracer = require('./array1d');\nvar Array2DTracer = require('./array2d');\nvar ChartTracer = require('./chart');\nvar CoordinateSystemTracer = require('./coordinate_system');\nvar DirectedGraphTracer = require('./directed_graph');\nvar DirectedGraphConstructTracer = require('./directed_graph_construct');\nvar UndirectedGraphTracer = require('./undirected_graph');\nvar WeightedDirectedGraphTracer = require('./weighted_directed_graph');\nvar WeightedUndirectedGraphTracer = require('./weighted_undirected_graph');\n\nmodule.exports = {\n  Tracer: Tracer,\n  LogTracer: LogTracer,\n  Array1DTracer: Array1DTracer,\n  Array2DTracer: Array2DTracer,\n  ChartTracer: ChartTracer,\n  CoordinateSystemTracer: CoordinateSystemTracer,\n  DirectedGraphTracer: DirectedGraphTracer,\n  DirectedGraphConstructTracer: DirectedGraphConstructTracer,\n  UndirectedGraphTracer: UndirectedGraphTracer,\n  WeightedDirectedGraphTracer: WeightedDirectedGraphTracer,\n  WeightedUndirectedGraphTracer: WeightedUndirectedGraphTracer\n};\n\n},{\"./array1d\":47,\"./array2d\":48,\"./chart\":49,\"./coordinate_system\":50,\"./directed_graph\":51,\"./directed_graph_construct\":52,\"./log\":54,\"./tracer\":55,\"./undirected_graph\":56,\"./weighted_directed_graph\":57,\"./weighted_undirected_graph\":58}],54:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Tracer = require('./tracer');\n\nvar LogTracer = function (_Tracer) {\n  _inherits(LogTracer, _Tracer);\n\n  _createClass(LogTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'LogTracer';\n    }\n  }]);\n\n  function LogTracer(name) {\n    _classCallCheck(this, LogTracer);\n\n    var _this = _possibleConstructorReturn(this, (LogTracer.__proto__ || Object.getPrototypeOf(LogTracer)).call(this, name));\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(LogTracer, [{\n    key: '_print',\n    value: function _print(msg) {\n      this.manager.pushStep(this.capsule, {\n        type: 'print',\n        msg: msg\n      });\n      return this;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      switch (step.type) {\n        case 'print':\n          this.print(step.msg);\n          break;\n      }\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      this.scrollToEnd(Math.min(50, this.interval));\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      _get(LogTracer.prototype.__proto__ || Object.getPrototypeOf(LogTracer.prototype), 'clear', this).call(this);\n\n      this.$wrapper.empty();\n    }\n  }, {\n    key: 'print',\n    value: function print(message) {\n      this.$wrapper.append($('<span>').append(message + '<br/>'));\n      window.postMessage(JSON.stringify({\n        action: 'trace',\n        message: message\n      }));\n    }\n  }, {\n    key: 'scrollToEnd',\n    value: function scrollToEnd(duration) {\n      this.$container.animate({\n        scrollTop: this.$container[0].scrollHeight\n      }, duration);\n    }\n  }]);\n\n  return LogTracer;\n}(Tracer);\n\nvar initView = function initView(tracer) {\n  tracer.$wrapper = tracer.capsule.$wrapper = $('<div class=\"wrapper\">');\n  tracer.$container.append(tracer.$wrapper);\n};\n\nmodule.exports = LogTracer;\n\n},{\"./tracer\":55}],55:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar app = require('../../app');\n\nvar _require = require('../../tracer_manager/util/index'),\n    toJSON = _require.toJSON,\n    fromJSON = _require.fromJSON;\n\nvar Tracer = function () {\n  _createClass(Tracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'Tracer';\n    }\n  }]);\n\n  function Tracer(name) {\n    _classCallCheck(this, Tracer);\n\n    this.module = this.constructor;\n\n    this.color = {\n      selected: '#2962ff',\n      notified: '#f50057',\n      visited: '#f50057',\n      left: '#616161',\n      default: '#bdbdbd'\n    };\n\n    this.manager = app.getTracerManager();\n    this.capsule = this.manager.allocate(this);\n    $.extend(this, this.capsule);\n\n    this.setName(name);\n  }\n\n  _createClass(Tracer, [{\n    key: '_setData',\n    value: function _setData() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.manager.pushStep(this.capsule, {\n        type: 'setData',\n        args: toJSON(args)\n      });\n      return this;\n    }\n  }, {\n    key: '_clear',\n    value: function _clear() {\n      this.manager.pushStep(this.capsule, {\n        type: 'clear'\n      });\n      return this;\n    }\n  }, {\n    key: '_wait',\n    value: function _wait(line) {\n      this.manager.newStep(line);\n      return this;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      var type = step.type,\n          args = step.args;\n\n\n      switch (type) {\n        case 'setData':\n          this.setData.apply(this, _toConsumableArray(fromJSON(args)));\n          break;\n        case 'clear':\n          this.clear();\n          break;\n      }\n    }\n  }, {\n    key: 'setName',\n    value: function setName(name) {\n      var $name = void 0;\n      if (this.isNew) {\n        $name = $('<span class=\"name\">');\n        this.$container.append($name);\n      } else {\n        $name = this.$container.find('span.name');\n      }\n      $name.text(name || this.defaultName);\n    }\n  }, {\n    key: 'setData',\n    value: function setData() {\n      var data = toJSON(arguments);\n      if (!this.isNew && this.lastData === data) {\n        return true;\n      }\n      this.lastData = this.capsule.lastData = data;\n      return false;\n    }\n  }, {\n    key: 'resize',\n    value: function resize() {}\n  }, {\n    key: 'refresh',\n    value: function refresh() {}\n  }, {\n    key: 'clear',\n    value: function clear() {}\n  }, {\n    key: 'attach',\n    value: function attach(tracer) {\n      switch (tracer.module) {\n        case LogTracer:\n          this.logTracer = tracer;\n          break;\n        case ChartTracer:\n          this.chartTracer = tracer;\n          break;\n      }\n      return this;\n    }\n  }, {\n    key: 'palette',\n    value: function palette(color) {\n      $.extend(this.color, color);\n      return this;\n    }\n  }, {\n    key: 'mousedown',\n    value: function mousedown(e) {}\n  }, {\n    key: 'mousemove',\n    value: function mousemove(e) {}\n  }, {\n    key: 'mouseup',\n    value: function mouseup(e) {}\n  }, {\n    key: 'mousewheel',\n    value: function mousewheel(e) {}\n  }]);\n\n  return Tracer;\n}();\n\nmodule.exports = Tracer;\n\n},{\"../../app\":3,\"../../tracer_manager/util/index\":75}],56:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DirectedGraphTracer = require('./directed_graph');\n\nvar UndirectedGraphTracer = function (_DirectedGraphTracer) {\n  _inherits(UndirectedGraphTracer, _DirectedGraphTracer);\n\n  _createClass(UndirectedGraphTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'UndirectedGraphTracer';\n    }\n  }]);\n\n  function UndirectedGraphTracer(name) {\n    _classCallCheck(this, UndirectedGraphTracer);\n\n    var _this = _possibleConstructorReturn(this, (UndirectedGraphTracer.__proto__ || Object.getPrototypeOf(UndirectedGraphTracer)).call(this, name));\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(UndirectedGraphTracer, [{\n    key: 'setTreeData',\n    value: function setTreeData(G, root) {\n      return _get(UndirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(UndirectedGraphTracer.prototype), 'setTreeData', this).call(this, G, root, true);\n    }\n  }, {\n    key: 'setData',\n    value: function setData(G) {\n      return _get(UndirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(UndirectedGraphTracer.prototype), 'setData', this).call(this, G, true);\n    }\n  }, {\n    key: 'e',\n    value: function e(v1, v2) {\n      if (v1 > v2) {\n        var temp = v1;\n        v1 = v2;\n        v2 = temp;\n      }\n      return 'e' + v1 + '_' + v2;\n    }\n  }, {\n    key: 'drawOnHover',\n    value: function drawOnHover(node, context, settings, next) {\n      var tracer = this;\n\n      context.setLineDash([5, 5]);\n      var nodeIdx = node.id.substring(1);\n      this.graph.edges().forEach(function (edge) {\n        var ends = edge.id.substring(1).split(\"_\");\n        if (ends[0] == nodeIdx) {\n          var color = '#0ff';\n          var source = node;\n          var target = tracer.graph.nodes('n' + ends[1]);\n          tracer.drawEdge(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        } else if (ends[1] == nodeIdx) {\n          var color = '#0ff';\n          var source = tracer.graph.nodes('n' + ends[0]);\n          var target = node;\n          tracer.drawEdge(edge, source, target, color, context, settings);\n          if (next) next(edge, source, target, color, context, settings);\n        }\n      });\n    }\n  }, {\n    key: 'drawEdge',\n    value: function drawEdge(edge, source, target, color, context, settings) {\n      var prefix = settings('prefix') || '',\n          size = edge[prefix + 'size'] || 1;\n\n      context.strokeStyle = color;\n      context.lineWidth = size;\n      context.beginPath();\n      context.moveTo(source[prefix + 'x'], source[prefix + 'y']);\n      context.lineTo(target[prefix + 'x'], target[prefix + 'y']);\n      context.stroke();\n    }\n  }]);\n\n  return UndirectedGraphTracer;\n}(DirectedGraphTracer);\n\nvar initView = function initView(tracer) {\n  tracer.s.settings({\n    defaultEdgeType: 'def',\n    funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n      var color = tracer.getColor(edge, source, target, settings);\n      tracer.drawEdge(edge, source, target, color, context, settings);\n    }\n  });\n};\n\nmodule.exports = UndirectedGraphTracer;\n\n},{\"./directed_graph\":51}],57:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DirectedGraphTracer = require('./directed_graph');\n\nvar _require = require('../../tracer_manager/util/index'),\n    refineByType = _require.refineByType;\n\nvar WeightedDirectedGraphTracer = function (_DirectedGraphTracer) {\n  _inherits(WeightedDirectedGraphTracer, _DirectedGraphTracer);\n\n  _createClass(WeightedDirectedGraphTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'WeightedDirectedGraphTracer';\n    }\n  }]);\n\n  function WeightedDirectedGraphTracer(name) {\n    _classCallCheck(this, WeightedDirectedGraphTracer);\n\n    var _this = _possibleConstructorReturn(this, (WeightedDirectedGraphTracer.__proto__ || Object.getPrototypeOf(WeightedDirectedGraphTracer)).call(this, name));\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(WeightedDirectedGraphTracer, [{\n    key: '_weight',\n    value: function _weight(target, weight) {\n      this.manager.pushStep(this.capsule, {\n        type: 'weight',\n        target: target,\n        weight: weight\n      });\n      return this;\n    }\n  }, {\n    key: '_visit',\n    value: function _visit(target, source, weight) {\n      this.manager.pushStep(this.capsule, {\n        type: 'visit',\n        target: target,\n        source: source,\n        weight: weight\n      });\n      return this;\n    }\n  }, {\n    key: '_leave',\n    value: function _leave(target, source, weight) {\n      this.manager.pushStep(this.capsule, {\n        type: 'leave',\n        target: target,\n        source: source,\n        weight: weight\n      });\n      return this;\n    }\n  }, {\n    key: 'processStep',\n    value: function processStep(step, options) {\n      switch (step.type) {\n        case 'weight':\n          var targetNode = this.graph.nodes(this.n(step.target));\n          if (step.weight !== undefined) targetNode.weight = refineByType(step.weight);\n          break;\n        case 'visit':\n        case 'leave':\n          var visit = step.type == 'visit';\n          var targetNode = this.graph.nodes(this.n(step.target));\n          var color = visit ? step.weight === undefined ? this.color.selected : this.color.visited : this.color.left;\n          targetNode.color = color;\n          if (step.weight !== undefined) targetNode.weight = refineByType(step.weight);\n          if (step.source !== undefined) {\n            var edgeId = this.e(step.source, step.target);\n            var edge = this.graph.edges(edgeId);\n            edge.color = color;\n            this.graph.dropEdge(edgeId).addEdge(edge);\n          }\n          if (this.logTracer) {\n            var source = step.source;\n            if (source === undefined) source = '';\n            this.logTracer.print(visit ? source + ' -> ' + step.target : source + ' <- ' + step.target);\n          }\n          break;\n        default:\n          _get(WeightedDirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(WeightedDirectedGraphTracer.prototype), 'processStep', this).call(this, step, options);\n      }\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      _get(WeightedDirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(WeightedDirectedGraphTracer.prototype), 'clear', this).call(this);\n\n      this.clearWeights();\n    }\n  }, {\n    key: 'clearWeights',\n    value: function clearWeights() {\n      this.graph.nodes().forEach(function (node) {\n        node.weight = 0;\n      });\n    }\n  }, {\n    key: 'drawEdgeWeight',\n    value: function drawEdgeWeight(edge, source, target, color, context, settings) {\n      if (source == target) return;\n\n      var prefix = settings('prefix') || '',\n          size = edge[prefix + 'size'] || 1;\n\n      if (size < settings('edgeLabelThreshold')) return;\n\n      if (0 === settings('edgeLabelSizePowRatio')) throw '\"edgeLabelSizePowRatio\" must not be 0.';\n\n      var fontSize,\n          x = (source[prefix + 'x'] + target[prefix + 'x']) / 2,\n          y = (source[prefix + 'y'] + target[prefix + 'y']) / 2,\n          dX = target[prefix + 'x'] - source[prefix + 'x'],\n          dY = target[prefix + 'y'] - source[prefix + 'y'],\n          angle = Math.atan2(dY, dX);\n\n      fontSize = settings('edgeLabelSize') === 'fixed' ? settings('defaultEdgeLabelSize') : settings('defaultEdgeLabelSize') * size * Math.pow(size, -1 / settings('edgeLabelSizePowRatio'));\n\n      context.save();\n\n      if (edge.active) {\n        context.font = [settings('activeFontStyle'), fontSize + 'px', settings('activeFont') || settings('font')].join(' ');\n\n        context.fillStyle = color;\n      } else {\n        context.font = [settings('fontStyle'), fontSize + 'px', settings('font')].join(' ');\n\n        context.fillStyle = color;\n      }\n\n      context.textAlign = 'center';\n      context.textBaseline = 'alphabetic';\n\n      context.translate(x, y);\n      context.rotate(angle);\n      context.fillText(edge.weight, 0, -size / 2 - 3);\n\n      context.restore();\n    }\n  }, {\n    key: 'drawNodeWeight',\n    value: function drawNodeWeight(node, context, settings) {\n      var fontSize,\n          prefix = settings('prefix') || '',\n          size = node[prefix + 'size'];\n\n      if (size < settings('labelThreshold')) return;\n\n      fontSize = settings('labelSize') === 'fixed' ? settings('defaultLabelSize') : settings('labelSizeRatio') * size;\n\n      context.font = (settings('fontStyle') ? settings('fontStyle') + ' ' : '') + fontSize + 'px ' + settings('font');\n      context.fillStyle = settings('labelColor') === 'node' ? node.color || settings('defaultNodeColor') : settings('defaultLabelColor');\n\n      context.textAlign = 'left';\n      context.fillText(node.weight, Math.round(node[prefix + 'x'] + size * 1.5), Math.round(node[prefix + 'y'] + fontSize / 3));\n    }\n  }]);\n\n  return WeightedDirectedGraphTracer;\n}(DirectedGraphTracer);\n\nvar initView = function initView(tracer) {\n  tracer.s.settings({\n    edgeLabelSize: 'proportional',\n    defaultEdgeLabelSize: 20,\n    edgeLabelSizePowRatio: 0.8,\n    funcLabelsDef: function funcLabelsDef(node, context, settings) {\n      tracer.drawNodeWeight(node, context, settings);\n      tracer.drawLabel(node, context, settings);\n    },\n    funcHoversDef: function funcHoversDef(node, context, settings) {\n      tracer.drawOnHover(node, context, settings, tracer.drawEdgeWeight);\n    },\n    funcEdgesArrow: function funcEdgesArrow(edge, source, target, context, settings) {\n      var color = tracer.getColor(edge, source, target, settings);\n      tracer.drawArrow(edge, source, target, color, context, settings);\n      tracer.drawEdgeWeight(edge, source, target, color, context, settings);\n    }\n  });\n};\n\nmodule.exports = WeightedDirectedGraphTracer;\n\n},{\"../../tracer_manager/util/index\":75,\"./directed_graph\":51}],58:[function(require,module,exports){\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WeightedDirectedGraphTracer = require('./weighted_directed_graph');\nvar UndirectedGraphTracer = require('./undirected_graph');\n\nvar WeightedUndirectedGraphTracer = function (_WeightedDirectedGrap) {\n  _inherits(WeightedUndirectedGraphTracer, _WeightedDirectedGrap);\n\n  _createClass(WeightedUndirectedGraphTracer, null, [{\n    key: 'getClassName',\n    value: function getClassName() {\n      return 'WeightedUndirectedGraphTracer';\n    }\n  }]);\n\n  function WeightedUndirectedGraphTracer(name) {\n    _classCallCheck(this, WeightedUndirectedGraphTracer);\n\n    var _this = _possibleConstructorReturn(this, (WeightedUndirectedGraphTracer.__proto__ || Object.getPrototypeOf(WeightedUndirectedGraphTracer)).call(this, name));\n\n    _this.e = UndirectedGraphTracer.prototype.e;\n    _this.drawOnHover = UndirectedGraphTracer.prototype.drawOnHover;\n    _this.drawEdge = UndirectedGraphTracer.prototype.drawEdge;\n\n    if (_this.isNew) initView(_this);\n    return _this;\n  }\n\n  _createClass(WeightedUndirectedGraphTracer, [{\n    key: 'setTreeData',\n    value: function setTreeData(G, root) {\n      return _get(WeightedUndirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(WeightedUndirectedGraphTracer.prototype), 'setTreeData', this).call(this, G, root, true);\n    }\n  }, {\n    key: 'setData',\n    value: function setData(G) {\n      return _get(WeightedUndirectedGraphTracer.prototype.__proto__ || Object.getPrototypeOf(WeightedUndirectedGraphTracer.prototype), 'setData', this).call(this, G, true);\n    }\n  }, {\n    key: 'drawEdgeWeight',\n    value: function drawEdgeWeight(edge, source, target, color, context, settings) {\n      var prefix = settings('prefix') || '';\n      if (source[prefix + 'x'] > target[prefix + 'x']) {\n        var temp = source;\n        source = target;\n        target = temp;\n      }\n      WeightedDirectedGraphTracer.prototype.drawEdgeWeight.call(this, edge, source, target, color, context, settings);\n    }\n  }]);\n\n  return WeightedUndirectedGraphTracer;\n}(WeightedDirectedGraphTracer);\n\nvar initView = function initView(tracer) {\n  tracer.s.settings({\n    defaultEdgeType: 'def',\n    funcEdgesDef: function funcEdgesDef(edge, source, target, context, settings) {\n      var color = tracer.getColor(edge, source, target, settings);\n      tracer.drawEdge(edge, source, target, color, context, settings);\n      tracer.drawEdgeWeight(edge, source, target, color, context, settings);\n    }\n  });\n};\n\nmodule.exports = WeightedUndirectedGraphTracer;\n\n},{\"./undirected_graph\":56,\"./weighted_directed_graph\":57}],59:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url) {\n  return request(url, {\n    type: 'GET'\n  });\n};\n\n},{\"./request\":62}],60:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url) {\n  return request(url, {\n    dataType: 'json',\n    type: 'GET'\n  });\n};\n\n},{\"./request\":62}],61:[function(require,module,exports){\n'use strict';\n\nvar request = require('./request');\n\nmodule.exports = function (url, data) {\n  return request(url, {\n    dataType: 'json',\n    type: 'POST',\n    data: JSON.stringify(data)\n  });\n};\n\n},{\"./request\":62}],62:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('../../app');\n\nvar _$ = $,\n    ajax = _$.ajax,\n    extend = _$.extend;\n\n\nvar defaults = {};\n\nmodule.exports = function (url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  app.setIsLoading(true);\n\n  return new RSVP.Promise(function (resolve, reject) {\n    var callbacks = {\n      success: function success(response) {\n        app.setIsLoading(false);\n        resolve(response);\n      },\n      error: function error(reason) {\n        app.setIsLoading(false);\n        reject(reason);\n      }\n    };\n\n    var opts = extend({}, defaults, options, callbacks, {\n      url: url\n    });\n\n    ajax(opts);\n  });\n};\n\n},{\"../../app\":3,\"rsvp\":80}],63:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar app = require('../app');\nvar Toast = require('../dom/toast');\n\nvar checkLoading = function checkLoading() {\n  if (app.getIsLoading()) {\n    Toast.showErrorToast('Wait until it completes loading of previous file.');\n    return true;\n  }\n  return false;\n};\n\nvar getParameterByName = function getParameterByName(name) {\n  var url = window.location.href;\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n\n  var results = regex.exec(url);\n\n  if (!results || results.length !== 3) {\n    return null;\n  }\n\n  var _results = _slicedToArray(results, 3),\n      id = _results[2];\n\n  return id;\n};\n\nvar getHashValue = function getHashValue(key) {\n  if (!key) return null;\n  var hash = window.location.hash.substr(1);\n  var params = hash ? hash.split('&') : [];\n  for (var i = 0; i < params.length; i++) {\n    var pair = params[i].split('=');\n    if (pair[0] === key) {\n      return pair[1];\n    }\n  }\n  return null;\n};\n\nvar setHashValue = function setHashValue(key, value) {\n  if (!key || !value) return;\n  var hash = window.location.hash.substr(1);\n  var params = hash ? hash.split('&') : [];\n\n  var found = false;\n  for (var i = 0; i < params.length && !found; i++) {\n    var pair = params[i].split('=');\n    if (pair[0] === key) {\n      pair[1] = value;\n      params[i] = pair.join('=');\n      found = true;\n    }\n  }\n  if (!found) {\n    params.push([key, value].join('='));\n  }\n\n  var newHash = params.join('&');\n  window.location.hash = '#' + newHash;\n};\n\nvar removeHashValue = function removeHashValue(key) {\n  if (!key) return;\n  var hash = window.location.hash.substr(1);\n  var params = hash ? hash.split('&') : [];\n\n  for (var i = 0; i < params.length; i++) {\n    var pair = params[i].split('=');\n    if (pair[0] === key) {\n      params.splice(i, 1);\n      break;\n    }\n  }\n\n  var newHash = params.join('&');\n  window.location.hash = '#' + newHash;\n};\n\nvar setPath = function setPath(category, algorithm, file) {\n  var path = category ? category + (algorithm ? '/' + algorithm + (file ? '/' + file : '') : '') : '';\n  setHashValue('path', path);\n};\n\nvar getPath = function getPath() {\n  var hash = getHashValue('path');\n  if (hash) {\n    var _hash$split = hash.split('/'),\n        _hash$split2 = _slicedToArray(_hash$split, 3),\n        category = _hash$split2[0],\n        algorithm = _hash$split2[1],\n        file = _hash$split2[2];\n\n    return { category: category, algorithm: algorithm, file: file };\n  } else {\n    return false;\n  }\n};\n\nmodule.exports = {\n  checkLoading: checkLoading,\n  getParameterByName: getParameterByName,\n  getHashValue: getHashValue,\n  setHashValue: setHashValue,\n  removeHashValue: removeHashValue,\n  setPath: setPath,\n  getPath: getPath\n};\n\n},{\"../app\":3,\"../dom/toast\":31}],64:[function(require,module,exports){\n'use strict';\n\nvar loadAlgorithm = require('./load_algorithm');\nvar loadCategories = require('./load_categories');\nvar loadFile = require('./load_file');\nvar loadScratchPaper = require('./load_scratch_paper');\nvar shareScratchPaper = require('./share_scratch_paper');\nvar loadWikiList = require('./load_wiki_list');\nvar loadWiki = require('./load_wiki');\n\nmodule.exports = {\n  loadAlgorithm: loadAlgorithm,\n  loadCategories: loadCategories,\n  loadFile: loadFile,\n  loadScratchPaper: loadScratchPaper,\n  shareScratchPaper: shareScratchPaper,\n  loadWikiList: loadWikiList,\n  loadWiki: loadWiki\n};\n\n},{\"./load_algorithm\":65,\"./load_categories\":66,\"./load_file\":67,\"./load_scratch_paper\":68,\"./load_wiki\":69,\"./load_wiki_list\":70,\"./share_scratch_paper\":71}],65:[function(require,module,exports){\n'use strict';\n\nvar getJSON = require('./ajax/get_json');\n\nvar _require = require('../utils'),\n    getAlgorithmDir = _require.getAlgorithmDir;\n\nmodule.exports = function (category, algorithm) {\n  var dir = getAlgorithmDir(category, algorithm);\n  return getJSON(dir + 'desc.json');\n};\n\n},{\"../utils\":78,\"./ajax/get_json\":60}],66:[function(require,module,exports){\n'use strict';\n\nvar getJSON = require('./ajax/get_json');\n\nmodule.exports = function () {\n  return getJSON('./algorithm/category.json');\n};\n\n},{\"./ajax/get_json\":60}],67:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\n\nvar app = require('../app');\n\nvar _require = require('../utils'),\n    getFileDir = _require.getFileDir,\n    isScratchPaper = _require.isScratchPaper;\n\nvar _require2 = require('./helpers'),\n    checkLoading = _require2.checkLoading,\n    setPath = _require2.setPath;\n\nvar get = require('./ajax/get');\n\nvar loadDataAndCode = function loadDataAndCode(dir) {\n  return RSVP.hash({\n    data: get(dir + 'data.js'),\n    code: get(dir + 'code.js')\n  });\n};\n\nvar loadFileAndUpdateContent = function loadFileAndUpdateContent(dir) {\n  app.getEditor().clearContent();\n\n  return loadDataAndCode(dir).then(function (content) {\n    app.updateCachedFile(dir, content);\n    app.getEditor().setContent(content);\n  });\n};\n\nvar cachedContentExists = function cachedContentExists(cachedFile) {\n  return cachedFile && cachedFile.data !== undefined && cachedFile.code !== undefined;\n};\n\nmodule.exports = function (category, algorithm, file, explanation) {\n  return new RSVP.Promise(function (resolve, reject) {\n    if (checkLoading()) {\n      reject();\n    } else {\n      if (isScratchPaper(category)) {\n        setPath(category, app.getLoadedScratch());\n      } else {\n        setPath(category, algorithm, file);\n      }\n      $('#explanation').html(explanation);\n\n      var dir = getFileDir(category, algorithm, file);\n      app.setLastFileUsed(dir);\n      var cachedFile = app.getCachedFile(dir);\n\n      if (cachedContentExists(cachedFile)) {\n        app.getEditor().setContent(cachedFile);\n        resolve();\n      } else {\n        loadFileAndUpdateContent(dir).then(resolve, reject);\n      }\n    }\n  });\n};\n\n},{\"../app\":3,\"../utils\":78,\"./ajax/get\":59,\"./helpers\":63,\"rsvp\":80}],68:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('../app');\n\nvar _require = require('../utils'),\n    getFileDir = _require.getFileDir;\n\nvar getJSON = require('./ajax/get_json');\nvar loadAlgorithm = require('./load_algorithm');\n\nvar extractGistCode = function extractGistCode(files, name) {\n  return files[name + '.js'].content;\n};\n\nmodule.exports = function (gistID) {\n  return new RSVP.Promise(function (resolve, reject) {\n    app.setLoadedScratch(gistID);\n\n    getJSON('https://api.github.com/gists/' + gistID).then(function (_ref) {\n      var files = _ref.files;\n\n\n      var category = 'scratch';\n      var algorithm = gistID;\n\n      loadAlgorithm(category, algorithm).then(function (data) {\n\n        var algoData = extractGistCode(files, 'data');\n        var algoCode = extractGistCode(files, 'code');\n\n        // update scratch paper algo code with the loaded gist code\n        var dir = getFileDir(category, algorithm, 'scratch_paper');\n        app.updateCachedFile(dir, {\n          data: algoData,\n          code: algoCode,\n          'CREDIT.md': 'Shared by an anonymous user from http://parkjs814.github.io/AlgorithmVisualizer'\n        });\n\n        resolve({\n          category: category,\n          algorithm: algorithm,\n          data: data\n        });\n      });\n    });\n  });\n};\n\n},{\"../app\":3,\"../utils\":78,\"./ajax/get_json\":60,\"./load_algorithm\":65,\"rsvp\":80}],69:[function(require,module,exports){\n'use strict';\n\nvar get = require('./ajax/get');\n\nmodule.exports = function (wiki) {\n  return get('./wiki/' + wiki + '.md');\n};\n\n},{\"./ajax/get\":59}],70:[function(require,module,exports){\n'use strict';\n\nvar getJSON = require('./ajax/get_json');\n\nmodule.exports = function () {\n  return getJSON('./wiki.json');\n};\n\n},{\"./ajax/get_json\":60}],71:[function(require,module,exports){\n'use strict';\n\nvar RSVP = require('rsvp');\nvar app = require('../app');\n\nvar postJSON = require('./ajax/post_json');\n\nvar _require = require('./helpers'),\n    setPath = _require.setPath;\n\nmodule.exports = function () {\n  return new RSVP.Promise(function (resolve, reject) {\n    var _app$getEditor = app.getEditor(),\n        dataEditor = _app$getEditor.dataEditor,\n        codeEditor = _app$getEditor.codeEditor;\n\n    var gist = {\n      'description': 'temp',\n      'public': true,\n      'files': {\n        'data.js': {\n          'content': dataEditor.getValue()\n        },\n        'code.js': {\n          'content': codeEditor.getValue()\n        }\n      }\n    };\n\n    postJSON('https://api.github.com/gists', gist).then(function (_ref) {\n      var id = _ref.id;\n\n      app.setLoadedScratch(id);\n      setPath('scratch', id);\n      var _location = location,\n          href = _location.href;\n\n      $('#algorithm').html('Shared');\n      resolve(href);\n    });\n  });\n};\n\n},{\"../app\":3,\"./ajax/post_json\":61,\"./helpers\":63,\"rsvp\":80}],72:[function(require,module,exports){\n'use strict';\n\nvar TracerManager = require('./manager');\nvar Tracer = require('../module/tracer/tracer');\n\nmodule.exports = {\n  init: function init() {\n    var tm = new TracerManager();\n    Tracer.prototype.manager = tm;\n    return tm;\n  }\n};\n\n},{\"../module/tracer/tracer\":55,\"./manager\":73}],73:[function(require,module,exports){\n'use strict';\n\nvar app = require('../app');\nvar ModuleContainer = require('../dom/module_container');\nvar TopMenu = require('../dom/top_menu');\n\nvar _$ = $,\n    each = _$.each,\n    extend = _$.extend,\n    grep = _$.grep;\n\n\nvar stepLimit = 1e6;\n\nvar TracerManager = function TracerManager() {\n  this.timer = null;\n  this.pause = false;\n  this.capsules = [];\n  this.interval = 500;\n};\n\nTracerManager.prototype = {\n  add: function add(tracer) {\n\n    var $container = ModuleContainer.create();\n\n    var capsule = {\n      module: tracer.module,\n      tracer: tracer,\n      allocated: true,\n      defaultName: null,\n      $container: $container,\n      isNew: true\n    };\n\n    this.capsules.push(capsule);\n    return capsule;\n  },\n  allocate: function allocate(newTracer) {\n    var selectedCapsule = null;\n    var count = 0;\n\n    each(this.capsules, function (i, capsule) {\n      if (capsule.module === newTracer.module) {\n        count++;\n        if (!capsule.allocated) {\n          capsule.tracer = newTracer;\n          capsule.allocated = true;\n          capsule.isNew = false;\n          selectedCapsule = capsule;\n          return false;\n        }\n      }\n    });\n\n    if (selectedCapsule === null) {\n      count++;\n      selectedCapsule = this.add(newTracer);\n    }\n\n    var className = newTracer.module.getClassName();\n    selectedCapsule.defaultName = className + ' ' + count;\n    selectedCapsule.order = this.order++;\n    return selectedCapsule;\n  },\n  deallocateAll: function deallocateAll() {\n    this.order = 0;\n    this.reset();\n    each(this.capsules, function (i, capsule) {\n      capsule.allocated = false;\n    });\n  },\n  removeUnallocated: function removeUnallocated() {\n    var changed = false;\n\n    this.capsules = grep(this.capsules, function (capsule) {\n      var removed = !capsule.allocated;\n\n      if (capsule.isNew || removed) {\n        changed = true;\n      }\n      if (removed) {\n        capsule.$container.remove();\n      }\n\n      return !removed;\n    });\n\n    if (changed) {\n      this.place();\n    }\n  },\n  place: function place() {\n    var capsules = this.capsules;\n\n\n    each(capsules, function (i, capsule) {\n      var width = 100;\n      var height = 100 / capsules.length;\n      var top = height * capsule.order;\n\n      capsule.$container.css({\n        top: top + '%',\n        width: width + '%',\n        height: '100%'\n      });\n\n      capsule.tracer.resize();\n    });\n  },\n  resize: function resize() {\n    this.command('resize');\n  },\n  isPause: function isPause() {\n    return this.pause;\n  },\n  setInterval: function setInterval(interval) {\n    TopMenu.setInterval(interval);\n  },\n  reset: function reset() {\n    this.traces = [];\n    this.traceIndex = -1;\n    this.stepCnt = 0;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    this.command('clear');\n  },\n  pushStep: function pushStep(capsule, step) {\n    if (this.stepCnt++ > stepLimit) throw \"Tracer's stack overflow\";\n    var len = this.traces.length;\n    if (len == 0) len += this.newStep();\n    var last = this.traces[len - 1];\n    last.push(extend(step, {\n      capsule: capsule\n    }));\n  },\n  newStep: function newStep() {\n    var line = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n\n    var len = this.traces.length;\n    if (len > 0 && ~line) {\n      this.traces[len - 1].push(line);\n    }\n    return this.traces.push([]);\n  },\n  pauseStep: function pauseStep() {\n    if (this.traceIndex < 0) return;\n    this.pause = true;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    TopMenu.activateBtnPause();\n  },\n  resumeStep: function resumeStep() {\n    this.pause = false;\n    this.step(this.traceIndex + 1);\n    TopMenu.deactivateBtnPause();\n  },\n  step: function step(i) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var tracer = this;\n\n    if (isNaN(i) || i >= this.traces.length || i < 0) return;\n\n    this.traceIndex = i;\n    var trace = this.traces[i];\n    trace.forEach(function (step) {\n      if (typeof step === 'number') {\n        app.getEditor().highlightLine(step);\n        return;\n      }\n      step.capsule.tracer.processStep(step, options);\n    });\n\n    if (!options.virtual) {\n      this.command('refresh');\n    }\n\n    if (this.pause) return;\n\n    this.timer = setTimeout(function () {\n      if (!tracer.nextStep(options)) {\n        TopMenu.resetTopMenuButtons();\n      }\n    }, this.interval);\n  },\n  prevStep: function prevStep() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    this.command('clear');\n\n    var finalIndex = this.traceIndex - 1;\n    if (finalIndex < 0) {\n      this.traceIndex = -1;\n      this.command('refresh');\n      return false;\n    }\n\n    for (var i = 0; i < finalIndex; i++) {\n      this.step(i, extend(options, {\n        virtual: true\n      }));\n    }\n\n    this.step(finalIndex);\n    return true;\n  },\n  nextStep: function nextStep() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var finalIndex = this.traceIndex + 1;\n    if (finalIndex >= this.traces.length) {\n      this.traceIndex = this.traces.length - 1;\n      return false;\n    }\n\n    this.step(finalIndex, options);\n    return true;\n  },\n  visualize: function visualize() {\n    this.traceIndex = -1;\n    this.resumeStep();\n  },\n  command: function command() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var functionName = args.shift();\n    each(this.capsules, function (i, capsule) {\n      if (capsule.allocated) {\n        capsule.tracer.module.prototype[functionName].apply(capsule.tracer, args);\n      }\n    });\n  },\n  findOwner: function findOwner(container) {\n    var selectedCapsule = null;\n    each(this.capsules, function (i, capsule) {\n      if (capsule.$container[0] === container) {\n        selectedCapsule = capsule;\n        return false;\n      }\n    });\n    return selectedCapsule.tracer;\n  }\n};\n\nmodule.exports = TracerManager;\n\n},{\"../app\":3,\"../dom/module_container\":14,\"../dom/top_menu\":32}],74:[function(require,module,exports){\n'use strict';\n\nvar parse = JSON.parse;\n\n\nvar fromJSON = function fromJSON(obj) {\n  return parse(obj, function (key, value) {\n    return value === 'Infinity' ? Infinity : value;\n  });\n};\n\nmodule.exports = fromJSON;\n\n},{}],75:[function(require,module,exports){\n'use strict';\n\nvar toJSON = require('./to_json');\nvar fromJSON = require('./from_json');\nvar refineByType = require('./refine_by_type');\n\nmodule.exports = {\n  toJSON: toJSON,\n  fromJSON: fromJSON,\n  refineByType: refineByType\n};\n\n},{\"./from_json\":74,\"./refine_by_type\":76,\"./to_json\":77}],76:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar refineByType = function refineByType(item) {\n  switch (typeof item === 'undefined' ? 'undefined' : _typeof(item)) {\n    case 'number':\n      return refineNumber(item);\n    case 'boolean':\n      return refineBoolean(item);\n    default:\n      return refineString(item);\n  }\n};\n\nvar refineString = function refineString(str) {\n  return str === '' ? ' ' : str;\n};\n\nvar refineNumber = function refineNumber(num) {\n  return num === Infinity ? '∞' : num;\n};\n\nvar refineBoolean = function refineBoolean(bool) {\n  return bool ? 'T' : 'F';\n};\n\nmodule.exports = refineByType;\n\n},{}],77:[function(require,module,exports){\n'use strict';\n\nvar stringify = JSON.stringify;\n\n\nvar toJSON = function toJSON(obj) {\n  return stringify(obj, function (key, value) {\n    return value === Infinity ? 'Infinity' : value;\n  });\n};\n\nmodule.exports = toJSON;\n\n},{}],78:[function(require,module,exports){\n'use strict';\n\nvar isScratchPaper = function isScratchPaper(category, algorithm) {\n  return category == 'scratch';\n};\n\nvar getAlgorithmDir = function getAlgorithmDir(category, algorithm) {\n  return 'https://growthstudio.github.io/AlgorithmVisualizer/algorithm/' + category + '/' + algorithm + '/';\n};\n\nvar getFileDir = function getFileDir(category, algorithm, file) {\n  return 'https://growthstudio.github.io/AlgorithmVisualizer/algorithm/' + category + '/' + algorithm + '/' + file + '/';\n};\n\nvar renderMathJax = function renderMathJax() {\n  MathJax.Hub.Queue([\"Typeset\", MathJax.Hub]);\n};\n\nmodule.exports = {\n  isScratchPaper: isScratchPaper,\n  getAlgorithmDir: getAlgorithmDir,\n  getFileDir: getFileDir,\n  renderMathJax: renderMathJax\n};\n\n},{}],79:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],80:[function(require,module,exports){\n(function (process,global){\n/*!\n * @overview RSVP - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2016 Yehuda Katz, Tom Dale, Stefan Penner and contributors\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/tildeio/rsvp.js/master/LICENSE\n * @version   3.6.1\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.RSVP = global.RSVP || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction indexOf(callbacks, callback) {\n  for (var i = 0, l = callbacks.length; i < l; i++) {\n    if (callbacks[i] === callback) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction callbacksFor(object) {\n  var callbacks = object._promiseCallbacks;\n\n  if (!callbacks) {\n    callbacks = object._promiseCallbacks = {};\n  }\n\n  return callbacks;\n}\n\n/**\n  @class RSVP.EventTarget\n*/\nvar EventTarget = {\n\n  /**\n    `RSVP.EventTarget.mixin` extends an object with EventTarget methods. For\n    Example:\n     ```javascript\n    let object = {};\n     RSVP.EventTarget.mixin(object);\n     object.on('finished', function(event) {\n      // handle event\n    });\n     object.trigger('finished', { detail: value });\n    ```\n     `EventTarget.mixin` also works with prototypes:\n     ```javascript\n    let Person = function() {};\n    RSVP.EventTarget.mixin(Person.prototype);\n     let yehuda = new Person();\n    let tom = new Person();\n     yehuda.on('poke', function(event) {\n      console.log('Yehuda says OW');\n    });\n     tom.on('poke', function(event) {\n      console.log('Tom says OW');\n    });\n     yehuda.trigger('poke');\n    tom.trigger('poke');\n    ```\n     @method mixin\n    @for RSVP.EventTarget\n    @private\n    @param {Object} object object to extend with EventTarget methods\n  */\n  mixin: function (object) {\n    object['on'] = this['on'];\n    object['off'] = this['off'];\n    object['trigger'] = this['trigger'];\n    object._promiseCallbacks = undefined;\n    return object;\n  },\n\n\n  /**\n    Registers a callback to be executed when `eventName` is triggered\n     ```javascript\n    object.on('event', function(eventInfo){\n      // handle the event\n    });\n     object.trigger('event');\n    ```\n     @method on\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName name of the event to listen for\n    @param {Function} callback function to be called when the event is triggered.\n  */\n  on: function (eventName, callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function');\n    }\n\n    var allCallbacks = callbacksFor(this),\n        callbacks = void 0;\n\n    callbacks = allCallbacks[eventName];\n\n    if (!callbacks) {\n      callbacks = allCallbacks[eventName] = [];\n    }\n\n    if (indexOf(callbacks, callback) === -1) {\n      callbacks.push(callback);\n    }\n  },\n\n\n  /**\n    You can use `off` to stop firing a particular callback for an event:\n     ```javascript\n    function doStuff() { // do stuff! }\n    object.on('stuff', doStuff);\n     object.trigger('stuff'); // doStuff will be called\n     // Unregister ONLY the doStuff callback\n    object.off('stuff', doStuff);\n    object.trigger('stuff'); // doStuff will NOT be called\n    ```\n     If you don't pass a `callback` argument to `off`, ALL callbacks for the\n    event will not be executed when the event fires. For example:\n     ```javascript\n    let callback1 = function(){};\n    let callback2 = function(){};\n     object.on('stuff', callback1);\n    object.on('stuff', callback2);\n     object.trigger('stuff'); // callback1 and callback2 will be executed.\n     object.off('stuff');\n    object.trigger('stuff'); // callback1 and callback2 will not be executed!\n    ```\n     @method off\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName event to stop listening to\n    @param {Function} callback optional argument. If given, only the function\n    given will be removed from the event's callback queue. If no `callback`\n    argument is given, all callbacks will be removed from the event's callback\n    queue.\n  */\n  off: function (eventName, callback) {\n    var allCallbacks = callbacksFor(this),\n        callbacks = void 0,\n        index = void 0;\n\n    if (!callback) {\n      allCallbacks[eventName] = [];\n      return;\n    }\n\n    callbacks = allCallbacks[eventName];\n\n    index = indexOf(callbacks, callback);\n\n    if (index !== -1) {\n      callbacks.splice(index, 1);\n    }\n  },\n\n\n  /**\n    Use `trigger` to fire custom events. For example:\n     ```javascript\n    object.on('foo', function(){\n      console.log('foo event happened!');\n    });\n    object.trigger('foo');\n    // 'foo event happened!' logged to the console\n    ```\n     You can also pass a value as a second argument to `trigger` that will be\n    passed as an argument to all event listeners for the event:\n     ```javascript\n    object.on('foo', function(value){\n      console.log(value.name);\n    });\n     object.trigger('foo', { name: 'bar' });\n    // 'bar' logged to the console\n    ```\n     @method trigger\n    @for RSVP.EventTarget\n    @private\n    @param {String} eventName name of the event to be triggered\n    @param {*} options optional value to be passed to any event handlers for\n    the given `eventName`\n  */\n  trigger: function (eventName, options, label) {\n    var allCallbacks = callbacksFor(this),\n        callbacks = void 0,\n        callback = void 0;\n\n    if (callbacks = allCallbacks[eventName]) {\n      // Don't cache the callbacks.length since it may grow\n      for (var i = 0; i < callbacks.length; i++) {\n        callback = callbacks[i];\n\n        callback(options, label);\n      }\n    }\n  }\n};\n\nvar config = {\n  instrument: false\n};\n\nEventTarget['mixin'](config);\n\nfunction configure(name, value) {\n  if (arguments.length === 2) {\n    config[name] = value;\n  } else {\n    return config[name];\n  }\n}\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nfunction isObject(x) {\n  return x !== null && typeof x === 'object';\n}\n\nfunction isMaybeThenable(x) {\n  return x !== null && typeof x === 'object';\n}\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\n// Date.now is not available in browsers < IE9\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\nvar now = Date.now || function () {\n  return new Date().getTime();\n};\n\nvar queue = [];\n\nfunction scheduleFlush() {\n  setTimeout(function () {\n    for (var i = 0; i < queue.length; i++) {\n      var entry = queue[i];\n\n      var payload = entry.payload;\n\n      payload.guid = payload.key + payload.id;\n      payload.childGuid = payload.key + payload.childId;\n      if (payload.error) {\n        payload.stack = payload.error.stack;\n      }\n\n      config['trigger'](entry.name, entry.payload);\n    }\n    queue.length = 0;\n  }, 50);\n}\n\nfunction instrument(eventName, promise, child) {\n  if (1 === queue.push({\n    name: eventName,\n    payload: {\n      key: promise._guidKey,\n      id: promise._id,\n      eventName: eventName,\n      detail: promise._result,\n      childId: child && child._id,\n      label: promise._label,\n      timeStamp: now(),\n      error: config[\"instrument-with-stack\"] ? new Error(promise._label) : null\n    } })) {\n    scheduleFlush();\n  }\n}\n\n/**\n  `RSVP.Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new RSVP.Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = RSVP.Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {*} object value that the returned promise will be resolved with\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop, label);\n  resolve(promise, object);\n  return promise;\n}\n\nfunction withOwnPromise() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  config.async(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value, undefined);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    thenable._onError = null;\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      if (thenable !== value) {\n        resolve(promise, value, undefined);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  var isOwnThenable = maybeThenable.constructor === promise.constructor && then$$1 === then && promise.constructor.resolve === resolve$1;\n\n  if (isOwnThenable) {\n    handleOwnThenable(promise, maybeThenable);\n  } else if (then$$1 === GET_THEN_ERROR) {\n    reject(promise, GET_THEN_ERROR.error);\n    GET_THEN_ERROR.error = null;\n  } else if (isFunction(then$$1)) {\n    handleForeignThenable(promise, maybeThenable, then$$1);\n  } else {\n    fulfill(promise, maybeThenable);\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    fulfill(promise, value);\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onError) {\n    promise._onError(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length === 0) {\n    if (config.instrument) {\n      instrument('fulfilled', promise);\n    }\n  } else {\n    config.async(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n  config.async(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var subscribers = parent._subscribers;\n  var length = subscribers.length;\n\n  parent._onError = null;\n\n  subscribers[length] = child;\n  subscribers[length + FULFILLED] = onFulfillment;\n  subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    config.async(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (config.instrument) {\n    instrument(settled === FULFILLED ? 'fulfilled' : 'rejected', promise);\n  }\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      result = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, result);\n    } else {\n      callback(result);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, result) {\n  try {\n    return callback(result);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(state, promise, callback, result) {\n  var hasCallback = isFunction(callback);\n  var value = void 0,\n      error = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, result);\n\n    if (value === TRY_CATCH_ERROR) {\n      error = value.error;\n      value.error = null; // release\n    } else if (value === promise) {\n      reject(promise, withOwnPromise());\n      return;\n    }\n  } else {\n    value = result;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && error === undefined) {\n    resolve(promise, value);\n  } else if (error !== undefined) {\n    reject(promise, error);\n  } else if (state === FULFILLED) {\n    fulfill(promise, value);\n  } else if (state === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  var resolved = false;\n  try {\n    resolver(function (value) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      resolve(promise, value);\n    }, function (reason) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nfunction then(onFulfillment, onRejection, label) {\n  var parent = this;\n  var state = parent._state;\n\n  if (state === FULFILLED && !onFulfillment || state === REJECTED && !onRejection) {\n    config.instrument && instrument('chained', parent, parent);\n    return parent;\n  }\n\n  parent._onError = null;\n\n  var child = new parent.constructor(noop, label);\n  var result = parent._result;\n\n  config.instrument && instrument('chained', parent, child);\n\n  if (state === PENDING) {\n    subscribe(parent, child, onFulfillment, onRejection);\n  } else {\n    var callback = state === FULFILLED ? onFulfillment : onRejection;\n    config.async(function () {\n      return invokeCallback(state, child, callback, result);\n    });\n  }\n\n  return child;\n}\n\nfunction Enumerator(Constructor, input, abortOnReject, label) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop, label);\n  this._abortOnReject = abortOnReject;\n\n  this._init.apply(this, arguments);\n}\n\nEnumerator.prototype._init = function (Constructor, input) {\n  var len = input.length || 0;\n  this.length = len;\n  this._remaining = len;\n  this._result = new Array(len);\n\n  this._enumerate(input);\n  if (this._remaining === 0) {\n    fulfill(this.promise, this._result);\n  }\n};\n\nEnumerator.prototype._enumerate = function (input) {\n  var length = this.length;\n  var promise = this.promise;\n\n  for (var i = 0; promise._state === PENDING && i < length; i++) {\n    this._eachEntry(input[i], i);\n  }\n};\n\nEnumerator.prototype._settleMaybeThenable = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$1 = c.resolve;\n\n  if (resolve$$1 === resolve$1) {\n    var then$$1 = getThen(entry);\n\n    if (then$$1 === then && entry._state !== PENDING) {\n      entry._onError = null;\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof then$$1 !== 'function') {\n      this._remaining--;\n      this._result[i] = this._makeResult(FULFILLED, i, entry);\n    } else if (c === Promise) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, then$$1);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$1) {\n        return resolve$$1(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$1(entry), i);\n  }\n};\n\nEnumerator.prototype._eachEntry = function (entry, i) {\n  if (isMaybeThenable(entry)) {\n    this._settleMaybeThenable(entry, i);\n  } else {\n    this._remaining--;\n    this._result[i] = this._makeResult(FULFILLED, i, entry);\n  }\n};\n\nEnumerator.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    if (this._abortOnReject && state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._remaining--;\n      this._result[i] = this._makeResult(state, i, value);\n      if (this._remaining === 0) {\n        fulfill(promise, this._result);\n      }\n    }\n  }\n};\n\nEnumerator.prototype._makeResult = function (state, i, value) {\n  return value;\n};\n\nEnumerator.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\nfunction makeSettledResult(state, position, value) {\n  if (state === FULFILLED) {\n    return {\n      state: 'fulfilled',\n      value: value\n    };\n  } else {\n    return {\n      state: 'rejected',\n      reason: value\n    };\n  }\n}\n\n/**\n  `RSVP.Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error(\"2\"));\n  let promise3 = RSVP.reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  RSVP.Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries, label) {\n  if (!isArray(entries)) {\n    return this.reject(new TypeError(\"Promise.all must be called with an array\"), label);\n  }\n  return new Enumerator(this, entries, true /* abort on reject */, label).promise;\n}\n\n/**\n  `RSVP.Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  RSVP.Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `RSVP.Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new RSVP.Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  RSVP.Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  RSVP.Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} entries array of promises to observe\n  @param {String} label optional string for describing the promise returned.\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  var promise = new Constructor(noop, label);\n\n  if (!isArray(entries)) {\n    reject(promise, new TypeError('Promise.race must be called with an array'));\n    return promise;\n  }\n\n  for (var i = 0; promise._state === PENDING && i < entries.length; i++) {\n    subscribe(Constructor.resolve(entries[i]), undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n\n  return promise;\n}\n\n/**\n  `RSVP.Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new RSVP.Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = RSVP.Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason, label) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop, label);\n  reject(promise, reason);\n  return promise;\n}\n\nvar guidKey = 'rsvp_' + now() + '-';\nvar counter = 0;\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise’s eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class RSVP.Promise\n  @param {function} resolver\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise(resolver, label) {\n  this._id = counter++;\n  this._label = label;\n  this._state = undefined;\n  this._result = undefined;\n  this._subscribers = [];\n\n  config.instrument && instrument('created', this);\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise.prototype._onError = function (reason) {\n  var _this = this;\n\n  config.after(function () {\n    if (_this._onError) {\n      config.trigger('error', reason, _this._label);\n    }\n  });\n};\n\n/**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n\n  ```js\n  function findAuthor(){\n    throw new Error('couldn\\'t find that author');\n  }\n\n  // synchronous\n  try {\n    findAuthor();\n  } catch(reason) {\n    // something went wrong\n  }\n\n  // async with promises\n  findAuthor().catch(function(reason){\n    // something went wrong\n  });\n  ```\n\n  @method catch\n  @param {Function} onRejection\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise}\n*/\nPromise.prototype.catch = function (onRejection, label) {\n  return this.then(undefined, onRejection, label);\n};\n\n/**\n  `finally` will be invoked regardless of the promise's fate just as native\n  try/catch/finally behaves\n\n  Synchronous example:\n\n  ```js\n  findAuthor() {\n    if (Math.random() > 0.5) {\n      throw new Error();\n    }\n    return new Author();\n  }\n\n  try {\n    return findAuthor(); // succeed or fail\n  } catch(error) {\n    return findOtherAuthor();\n  } finally {\n    // always runs\n    // doesn't affect the return value\n  }\n  ```\n\n  Asynchronous example:\n\n  ```js\n  findAuthor().catch(function(reason){\n    return findOtherAuthor();\n  }).finally(function(){\n    // author was either found, or not\n  });\n  ```\n\n  @method finally\n  @param {Function} callback\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise}\n*/\nPromise.prototype.finally = function (callback, label) {\n  var promise = this;\n  var constructor = promise.constructor;\n\n  return promise.then(function (value) {\n    return constructor.resolve(callback()).then(function () {\n      return value;\n    });\n  }, function (reason) {\n    return constructor.resolve(callback()).then(function () {\n      throw reason;\n    });\n  }, label);\n};\n\nPromise.cast = resolve$1; // deprecated\nPromise.all = all;\nPromise.race = race;\nPromise.resolve = resolve$1;\nPromise.reject = reject$1;\n\nPromise.prototype._guidKey = guidKey;\n\n/**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n\n  ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n\n  Chaining\n  --------\n\n  The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n\n  ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n\n  findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we\\'re unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we\\'re unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n  ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n\n  Assimilation\n  ------------\n\n  Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n\n  If the assimliated promise rejects, then the downstream promise will also reject.\n\n  ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n\n  Simple Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let result;\n\n  try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n\n  Advanced Example\n  --------------\n\n  Synchronous Example\n\n  ```javascript\n  let author, books;\n\n  try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n\n  Errback Example\n\n  ```js\n\n  function foundBooks(books) {\n\n  }\n\n  function failure(reason) {\n\n  }\n\n  findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n\n  Promise Example;\n\n  ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n\n  @method then\n  @param {Function} onFulfillment\n  @param {Function} onRejection\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise}\n*/\nPromise.prototype.then = then;\n\nfunction Result() {\n  this.value = undefined;\n}\n\nvar ERROR = new Result();\nvar GET_THEN_ERROR$1 = new Result();\n\nfunction getThen$1(obj) {\n  try {\n    return obj.then;\n  } catch (error) {\n    ERROR.value = error;\n    return ERROR;\n  }\n}\n\nfunction tryApply(f, s, a) {\n  try {\n    f.apply(s, a);\n  } catch (error) {\n    ERROR.value = error;\n    return ERROR;\n  }\n}\n\nfunction makeObject(_, argumentNames) {\n  var obj = {};\n  var length = _.length;\n  var args = new Array(length);\n\n  for (var x = 0; x < length; x++) {\n    args[x] = _[x];\n  }\n\n  for (var i = 0; i < argumentNames.length; i++) {\n    var name = argumentNames[i];\n    obj[name] = args[i + 1];\n  }\n\n  return obj;\n}\n\nfunction arrayResult(_) {\n  var length = _.length;\n  var args = new Array(length - 1);\n\n  for (var i = 1; i < length; i++) {\n    args[i - 1] = _[i];\n  }\n\n  return args;\n}\n\nfunction wrapThenable(then, promise) {\n  return {\n    then: function (onFulFillment, onRejection) {\n      return then.call(promise, onFulFillment, onRejection);\n    }\n  };\n}\n\n/**\n  `RSVP.denodeify` takes a 'node-style' function and returns a function that\n  will return an `RSVP.Promise`. You can use `denodeify` in Node.js or the\n  browser when you'd prefer to use promises over using callbacks. For example,\n  `denodeify` transforms the following:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) return handleError(err);\n    handleData(data);\n  });\n  ```\n\n  into:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = RSVP.denodeify(fs.readFile);\n\n  readFile('myfile.txt').then(handleData, handleError);\n  ```\n\n  If the node function has multiple success parameters, then `denodeify`\n  just returns the first one:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'));\n\n  request('http://example.com').then(function(res) {\n    // ...\n  });\n  ```\n\n  However, if you need all success parameters, setting `denodeify`'s\n  second parameter to `true` causes it to return all success parameters\n  as an array:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'), true);\n\n  request('http://example.com').then(function(result) {\n    // result[0] -> res\n    // result[1] -> body\n  });\n  ```\n\n  Or if you pass it an array with names it returns the parameters as a hash:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request'), ['res', 'body']);\n\n  request('http://example.com').then(function(result) {\n    // result.res\n    // result.body\n  });\n  ```\n\n  Sometimes you need to retain the `this`:\n\n  ```javascript\n  let app = require('express')();\n  let render = RSVP.denodeify(app.render.bind(app));\n  ```\n\n  The denodified function inherits from the original function. It works in all\n  environments, except IE 10 and below. Consequently all properties of the original\n  function are available to you. However, any properties you change on the\n  denodeified function won't be changed on the original function. Example:\n\n  ```javascript\n  let request = RSVP.denodeify(require('request')),\n      cookieJar = request.jar(); // <- Inheritance is used here\n\n  request('http://example.com', {jar: cookieJar}).then(function(res) {\n    // cookieJar.cookies holds now the cookies returned by example.com\n  });\n  ```\n\n  Using `denodeify` makes it easier to compose asynchronous operations instead\n  of using callbacks. For example, instead of:\n\n  ```javascript\n  let fs = require('fs');\n\n  fs.readFile('myfile.txt', function(err, data){\n    if (err) { ... } // Handle error\n    fs.writeFile('myfile2.txt', data, function(err){\n      if (err) { ... } // Handle error\n      console.log('done')\n    });\n  });\n  ```\n\n  you can chain the operations together using `then` from the returned promise:\n\n  ```javascript\n  let fs = require('fs');\n  let readFile = RSVP.denodeify(fs.readFile);\n  let writeFile = RSVP.denodeify(fs.writeFile);\n\n  readFile('myfile.txt').then(function(data){\n    return writeFile('myfile2.txt', data);\n  }).then(function(){\n    console.log('done')\n  }).catch(function(error){\n    // Handle error\n  });\n  ```\n\n  @method denodeify\n  @static\n  @for RSVP\n  @param {Function} nodeFunc a 'node-style' function that takes a callback as\n  its last argument. The callback expects an error to be passed as its first\n  argument (if an error occurred, otherwise null), and the value from the\n  operation as its second argument ('function(err, value){ }').\n  @param {Boolean|Array} [options] An optional paramter that if set\n  to `true` causes the promise to fulfill with the callback's success arguments\n  as an array. This is useful if the node function has multiple success\n  paramters. If you set this paramter to an array with names, the promise will\n  fulfill with a hash with these names as keys and the success parameters as\n  values.\n  @return {Function} a function that wraps `nodeFunc` to return an\n  `RSVP.Promise`\n  @static\n*/\nfunction denodeify(nodeFunc, options) {\n  var fn = function () {\n    var self = this;\n    var l = arguments.length;\n    var args = new Array(l + 1);\n    var promiseInput = false;\n\n    for (var i = 0; i < l; ++i) {\n      var arg = arguments[i];\n\n      if (!promiseInput) {\n        // TODO: clean this up\n        promiseInput = needsPromiseInput(arg);\n        if (promiseInput === GET_THEN_ERROR$1) {\n          var p = new Promise(noop);\n          reject(p, GET_THEN_ERROR$1.value);\n          return p;\n        } else if (promiseInput && promiseInput !== true) {\n          arg = wrapThenable(promiseInput, arg);\n        }\n      }\n      args[i] = arg;\n    }\n\n    var promise = new Promise(noop);\n\n    args[l] = function (err, val) {\n      if (err) reject(promise, err);else if (options === undefined) resolve(promise, val);else if (options === true) resolve(promise, arrayResult(arguments));else if (isArray(options)) resolve(promise, makeObject(arguments, options));else resolve(promise, val);\n    };\n\n    if (promiseInput) {\n      return handlePromiseInput(promise, args, nodeFunc, self);\n    } else {\n      return handleValueInput(promise, args, nodeFunc, self);\n    }\n  };\n\n  fn.__proto__ = nodeFunc;\n\n  return fn;\n}\n\nfunction handleValueInput(promise, args, nodeFunc, self) {\n  var result = tryApply(nodeFunc, self, args);\n  if (result === ERROR) {\n    reject(promise, result.value);\n  }\n  return promise;\n}\n\nfunction handlePromiseInput(promise, args, nodeFunc, self) {\n  return Promise.all(args).then(function (args) {\n    var result = tryApply(nodeFunc, self, args);\n    if (result === ERROR) {\n      reject(promise, result.value);\n    }\n    return promise;\n  });\n}\n\nfunction needsPromiseInput(arg) {\n  if (arg && typeof arg === 'object') {\n    if (arg.constructor === Promise) {\n      return true;\n    } else {\n      return getThen$1(arg);\n    }\n  } else {\n    return false;\n  }\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.all`.\n\n  @method all\n  @static\n  @for RSVP\n  @param {Array} array Array of promises.\n  @param {String} label An optional label. This is useful\n  for tooling.\n*/\nfunction all$1(array, label) {\n  return Promise.all(array, label);\n}\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AllSettled = function (_Enumerator) {\n  _inherits(AllSettled, _Enumerator);\n\n  function AllSettled(Constructor, entries, label) {\n    return _possibleConstructorReturn(this, _Enumerator.call(this, Constructor, entries, false /* don't abort on reject */, label));\n  }\n\n  return AllSettled;\n}(Enumerator);\n\nAllSettled.prototype._makeResult = makeSettledResult;\n\n/**\n`RSVP.allSettled` is similar to `RSVP.all`, but instead of implementing\na fail-fast method, it waits until all the promises have returned and\nshows you all the results. This is useful if you want to handle multiple\npromises' failure states together as a set.\n Returns a promise that is fulfilled when all the given promises have been\nsettled. The return promise is fulfilled with an array of the states of\nthe promises passed into the `promises` array argument.\n Each state object will either indicate fulfillment or rejection, and\nprovide the corresponding value or reason. The states will take one of\nthe following formats:\n ```javascript\n{ state: 'fulfilled', value: value }\n  or\n{ state: 'rejected', reason: reason }\n```\n Example:\n ```javascript\nlet promise1 = RSVP.Promise.resolve(1);\nlet promise2 = RSVP.Promise.reject(new Error('2'));\nlet promise3 = RSVP.Promise.reject(new Error('3'));\nlet promises = [ promise1, promise2, promise3 ];\n RSVP.allSettled(promises).then(function(array){\n  // array == [\n  //   { state: 'fulfilled', value: 1 },\n  //   { state: 'rejected', reason: Error },\n  //   { state: 'rejected', reason: Error }\n  // ]\n  // Note that for the second item, reason.message will be '2', and for the\n  // third item, reason.message will be '3'.\n}, function(error) {\n  // Not run. (This block would only be called if allSettled had failed,\n  // for instance if passed an incorrect argument type.)\n});\n```\n @method allSettled\n@static\n@for RSVP\n@param {Array} entries\n@param {String} label - optional string that describes the promise.\nUseful for tooling.\n@return {Promise} promise that is fulfilled with an array of the settled\nstates of the constituent promises.\n*/\n\nfunction allSettled(entries, label) {\n  if (!isArray(entries)) {\n    return Promise.reject(new TypeError(\"Promise.allSettled must be called with an array\"), label);\n  }\n\n  return new AllSettled(Promise, entries, label).promise;\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.race`.\n\n  @method race\n  @static\n  @for RSVP\n  @param {Array} array Array of promises.\n  @param {String} label An optional label. This is useful\n  for tooling.\n */\nfunction race$1(array, label) {\n  return Promise.race(array, label);\n}\n\nfunction _possibleConstructorReturn$1(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits$1(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar PromiseHash = function (_Enumerator) {\n  _inherits$1(PromiseHash, _Enumerator);\n\n  function PromiseHash(Constructor, object) {\n    var abortOnReject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var label = arguments[3];\n    return _possibleConstructorReturn$1(this, _Enumerator.call(this, Constructor, object, abortOnReject, label));\n  }\n\n  PromiseHash.prototype._init = function _init(Constructor, object) {\n    this._result = {};\n\n    this._enumerate(object);\n    if (this._remaining === 0) {\n      fulfill(this.promise, this._result);\n    }\n  };\n\n  PromiseHash.prototype._enumerate = function _enumerate(input) {\n    var promise = this.promise;\n    var results = [];\n\n    for (var key in input) {\n      if (hasOwnProperty.call(input, key)) {\n        results.push({\n          position: key,\n          entry: input[key]\n        });\n      }\n    }\n\n    var length = results.length;\n    this._remaining = length;\n    var result = void 0;\n\n    for (var i = 0; promise._state === PENDING && i < length; i++) {\n      result = results[i];\n      this._eachEntry(result.entry, result.position);\n    }\n  };\n\n  return PromiseHash;\n}(Enumerator);\n\n/**\n  `RSVP.hash` is similar to `RSVP.all`, but takes an object instead of an array\n  for its `promises` argument.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  fulfilled, or rejected if any of them become rejected. The returned promise\n  is fulfilled with a hash that has the same key names as the `promises` object\n  argument. If any of the values in the object are not promises, they will\n  simply be copied over to the fulfilled object.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.resolve(1),\n    yourPromise: RSVP.resolve(2),\n    theirPromise: RSVP.resolve(3),\n    notAPromise: 4\n  };\n\n  RSVP.hash(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: 1,\n    //   yourPromise: 2,\n    //   theirPromise: 3,\n    //   notAPromise: 4\n    // }\n  });\n  ````\n\n  If any of the `promises` given to `RSVP.hash` are rejected, the first promise\n  that is rejected will be given as the reason to the rejection handler.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.resolve(1),\n    rejectedPromise: RSVP.reject(new Error('rejectedPromise')),\n    anotherRejectedPromise: RSVP.reject(new Error('anotherRejectedPromise')),\n  };\n\n  RSVP.hash(promises).then(function(hash){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === 'rejectedPromise'\n  });\n  ```\n\n  An important note: `RSVP.hash` is intended for plain JavaScript objects that\n  are just a set of keys and values. `RSVP.hash` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  function MyConstructor(){\n    this.example = RSVP.resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: RSVP.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  RSVP.hash(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: 'Example'\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hash\n  @static\n  @for RSVP\n  @param {Object} object\n  @param {String} label optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all properties of `promises`\n  have been fulfilled, or rejected if any of them become rejected.\n*/\nfunction hash(object, label) {\n  if (!isObject(object)) {\n    return Promise.reject(new TypeError(\"Promise.hash must be called with an object\"), label);\n  }\n\n  return new PromiseHash(Promise, object, label).promise;\n}\n\nfunction _possibleConstructorReturn$2(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits$2(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HashSettled = function (_PromiseHash) {\n  _inherits$2(HashSettled, _PromiseHash);\n\n  function HashSettled(Constructor, object, label) {\n    return _possibleConstructorReturn$2(this, _PromiseHash.call(this, Constructor, object, false, label));\n  }\n\n  return HashSettled;\n}(PromiseHash);\n\nHashSettled.prototype._makeResult = makeSettledResult;\n\n/**\n  `RSVP.hashSettled` is similar to `RSVP.allSettled`, but takes an object\n  instead of an array for its `promises` argument.\n\n  Unlike `RSVP.all` or `RSVP.hash`, which implement a fail-fast method,\n  but like `RSVP.allSettled`, `hashSettled` waits until all the\n  constituent promises have returned and then shows you all the results\n  with their states and values/reasons. This is useful if you want to\n  handle multiple promises' failure states together as a set.\n\n  Returns a promise that is fulfilled when all the given promises have been\n  settled, or rejected if the passed parameters are invalid.\n\n  The returned promise is fulfilled with a hash that has the same key names as\n  the `promises` object argument. If any of the values in the object are not\n  promises, they will be copied over to the fulfilled object and marked with state\n  'fulfilled'.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.Promise.resolve(1),\n    yourPromise: RSVP.Promise.resolve(2),\n    theirPromise: RSVP.Promise.resolve(3),\n    notAPromise: 4\n  };\n\n  RSVP.hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise: { state: 'fulfilled', value: 1 },\n    //   yourPromise: { state: 'fulfilled', value: 2 },\n    //   theirPromise: { state: 'fulfilled', value: 3 },\n    //   notAPromise: { state: 'fulfilled', value: 4 }\n    // }\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.hash` are rejected, the state will\n  be set to 'rejected' and the reason for rejection provided.\n\n  Example:\n\n  ```javascript\n  let promises = {\n    myPromise: RSVP.Promise.resolve(1),\n    rejectedPromise: RSVP.Promise.reject(new Error('rejection')),\n    anotherRejectedPromise: RSVP.Promise.reject(new Error('more rejection')),\n  };\n\n  RSVP.hashSettled(promises).then(function(hash){\n    // hash here is an object that looks like:\n    // {\n    //   myPromise:              { state: 'fulfilled', value: 1 },\n    //   rejectedPromise:        { state: 'rejected', reason: Error },\n    //   anotherRejectedPromise: { state: 'rejected', reason: Error },\n    // }\n    // Note that for rejectedPromise, reason.message == 'rejection',\n    // and for anotherRejectedPromise, reason.message == 'more rejection'.\n  });\n  ```\n\n  An important note: `RSVP.hashSettled` is intended for plain JavaScript objects that\n  are just a set of keys and values. `RSVP.hashSettled` will NOT preserve prototype\n  chains.\n\n  Example:\n\n  ```javascript\n  function MyConstructor(){\n    this.example = RSVP.Promise.resolve('Example');\n  }\n\n  MyConstructor.prototype = {\n    protoProperty: RSVP.Promise.resolve('Proto Property')\n  };\n\n  let myObject = new MyConstructor();\n\n  RSVP.hashSettled(myObject).then(function(hash){\n    // protoProperty will not be present, instead you will just have an\n    // object that looks like:\n    // {\n    //   example: { state: 'fulfilled', value: 'Example' }\n    // }\n    //\n    // hash.hasOwnProperty('protoProperty'); // false\n    // 'undefined' === typeof hash.protoProperty\n  });\n  ```\n\n  @method hashSettled\n  @for RSVP\n  @param {Object} object\n  @param {String} label optional string that describes the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when when all properties of `promises`\n  have been settled.\n  @static\n*/\n\nfunction hashSettled(object, label) {\n  if (!isObject(object)) {\n    return Promise.reject(new TypeError(\"RSVP.hashSettled must be called with an object\"), label);\n  }\n\n  return new HashSettled(Promise, object, false, label).promise;\n}\n\n/**\n  `RSVP.rethrow` will rethrow an error on the next turn of the JavaScript event\n  loop in order to aid debugging.\n\n  Promises A+ specifies that any exceptions that occur with a promise must be\n  caught by the promises implementation and bubbled to the last handler. For\n  this reason, it is recommended that you always specify a second rejection\n  handler function to `then`. However, `RSVP.rethrow` will throw the exception\n  outside of the promise, so it bubbles up to your console if in the browser,\n  or domain/cause uncaught exception in Node. `rethrow` will also throw the\n  error again so the error can be handled by the promise per the spec.\n\n  ```javascript\n  function throws(){\n    throw new Error('Whoops!');\n  }\n\n  let promise = new RSVP.Promise(function(resolve, reject){\n    throws();\n  });\n\n  promise.catch(RSVP.rethrow).then(function(){\n    // Code here doesn't run because the promise became rejected due to an\n    // error!\n  }, function (err){\n    // handle the error here\n  });\n  ```\n\n  The 'Whoops' error will be thrown on the next turn of the event loop\n  and you can watch for it in your console. You can also handle it using a\n  rejection handler given to `.then` or `.catch` on the returned promise.\n\n  @method rethrow\n  @static\n  @for RSVP\n  @param {Error} reason reason the promise became rejected.\n  @throws Error\n  @static\n*/\nfunction rethrow(reason) {\n  setTimeout(function () {\n    throw reason;\n  });\n  throw reason;\n}\n\n/**\n  `RSVP.defer` returns an object similar to jQuery's `$.Deferred`.\n  `RSVP.defer` should be used when porting over code reliant on `$.Deferred`'s\n  interface. New code should use the `RSVP.Promise` constructor instead.\n\n  The object returned from `RSVP.defer` is a plain object with three properties:\n\n  * promise - an `RSVP.Promise`.\n  * reject - a function that causes the `promise` property on this object to\n    become rejected\n  * resolve - a function that causes the `promise` property on this object to\n    become fulfilled.\n\n  Example:\n\n   ```javascript\n   let deferred = RSVP.defer();\n\n   deferred.resolve(\"Success!\");\n\n   deferred.promise.then(function(value){\n     // value here is \"Success!\"\n   });\n   ```\n\n  @method defer\n  @static\n  @for RSVP\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Object}\n */\n\nfunction defer(label) {\n  var deferred = { resolve: undefined, reject: undefined };\n\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  }, label);\n\n  return deferred;\n}\n\n/**\n `RSVP.map` is similar to JavaScript's native `map` method, except that it\n  waits for all promises to become fulfilled before running the `mapFn` on\n  each item in given to `promises`. `RSVP.map` returns a promise that will\n  become fulfilled with the result of running `mapFn` on the values the promises\n  become fulfilled with.\n\n  For example:\n\n  ```javascript\n\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  RSVP.map(promises, mapFn).then(function(result){\n    // result is [ 2, 3, 4 ]\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.map` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error('2'));\n  let promise3 = RSVP.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let mapFn = function(item){\n    return item + 1;\n  };\n\n  RSVP.map(promises, mapFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `RSVP.map` will also wait if a promise is returned from `mapFn`. For example,\n  say you want to get all comments from a set of blog posts, but you need\n  the blog posts first because they contain a url to those comments.\n\n  ```javscript\n\n  let mapFn = function(blogPost){\n    // getComments does some ajax and returns an RSVP.Promise that is fulfilled\n    // with some comments data\n    return getComments(blogPost.comments_url);\n  };\n\n  // getBlogPosts does some ajax and returns an RSVP.Promise that is fulfilled\n  // with some blog post data\n  RSVP.map(getBlogPosts(), mapFn).then(function(comments){\n    // comments is the result of asking the server for the comments\n    // of all blog posts returned from getBlogPosts()\n  });\n  ```\n\n  @method map\n  @static\n  @for RSVP\n  @param {Array} promises\n  @param {Function} mapFn function to be called on each fulfilled promise.\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled with the result of calling\n  `mapFn` on each fulfilled promise or value when they become fulfilled.\n   The promise will be rejected if any of the given `promises` become rejected.\n  @static\n*/\nfunction map(promises, mapFn, label) {\n  if (!isArray(promises)) {\n    return Promise.reject(new TypeError(\"RSVP.map must be called with an array\"), label);\n  }\n\n  if (!isFunction(mapFn)) {\n    return Promise.reject(new TypeError(\"RSVP.map expects a function as a second argument\"), label);\n  }\n\n  return Promise.all(promises, label).then(function (values) {\n    var length = values.length;\n    var results = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      results[i] = mapFn(values[i]);\n    }\n\n    return Promise.all(results, label);\n  });\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.resolve`.\n\n  @method resolve\n  @static\n  @for RSVP\n  @param {*} value value that the returned promise will be resolved with\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$2(value, label) {\n  return Promise.resolve(value, label);\n}\n\n/**\n  This is a convenient alias for `RSVP.Promise.reject`.\n\n  @method reject\n  @static\n  @for RSVP\n  @param {*} reason value that the returned promise will be rejected with.\n  @param {String} label optional string for identifying the returned promise.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$2(reason, label) {\n  return Promise.reject(reason, label);\n}\n\n/**\n `RSVP.filter` is similar to JavaScript's native `filter` method, except that it\n  waits for all promises to become fulfilled before running the `filterFn` on\n  each item in given to `promises`. `RSVP.filter` returns a promise that will\n  become fulfilled with the result of running `filterFn` on the values the\n  promises become fulfilled with.\n\n  For example:\n\n  ```javascript\n\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.resolve(2);\n  let promise3 = RSVP.resolve(3);\n\n  let promises = [promise1, promise2, promise3];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  RSVP.filter(promises, filterFn).then(function(result){\n    // result is [ 2, 3 ]\n  });\n  ```\n\n  If any of the `promises` given to `RSVP.filter` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promise's\n  rejection handler. For example:\n\n  ```javascript\n  let promise1 = RSVP.resolve(1);\n  let promise2 = RSVP.reject(new Error('2'));\n  let promise3 = RSVP.reject(new Error('3'));\n  let promises = [ promise1, promise2, promise3 ];\n\n  let filterFn = function(item){\n    return item > 1;\n  };\n\n  RSVP.filter(promises, filterFn).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(reason) {\n    // reason.message === '2'\n  });\n  ```\n\n  `RSVP.filter` will also wait for any promises returned from `filterFn`.\n  For instance, you may want to fetch a list of users then return a subset\n  of those users based on some asynchronous operation:\n\n  ```javascript\n\n  let alice = { name: 'alice' };\n  let bob   = { name: 'bob' };\n  let users = [ alice, bob ];\n\n  let promises = users.map(function(user){\n    return RSVP.resolve(user);\n  });\n\n  let filterFn = function(user){\n    // Here, Alice has permissions to create a blog post, but Bob does not.\n    return getPrivilegesForUser(user).then(function(privs){\n      return privs.can_create_blog_post === true;\n    });\n  };\n  RSVP.filter(promises, filterFn).then(function(users){\n    // true, because the server told us only Alice can create a blog post.\n    users.length === 1;\n    // false, because Alice is the only user present in `users`\n    users[0] === bob;\n  });\n  ```\n\n  @method filter\n  @static\n  @for RSVP\n  @param {Array} promises\n  @param {Function} filterFn - function to be called on each resolved value to\n  filter the final results.\n  @param {String} label optional string describing the promise. Useful for\n  tooling.\n  @return {Promise}\n*/\n\nfunction resolveAll(promises, label) {\n  return Promise.all(promises, label);\n}\n\nfunction resolveSingle(promise, label) {\n  return Promise.resolve(promise, label).then(function (promises) {\n    return resolveAll(promises, label);\n  });\n}\n\nfunction filter(promises, filterFn, label) {\n  if (!isArray(promises) && !(isObject(promises) && promises.then !== undefined)) {\n    return Promise.reject(new TypeError(\"RSVP.filter must be called with an array or promise\"), label);\n  }\n\n  if (!isFunction(filterFn)) {\n    return Promise.reject(new TypeError(\"RSVP.filter expects function as a second argument\"), label);\n  }\n\n  var promise = isArray(promises) ? resolveAll(promises, label) : resolveSingle(promises, label);\n  return promise.then(function (values) {\n    var length = values.length;\n    var filtered = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      filtered[i] = filterFn(values[i]);\n    }\n\n    return resolveAll(filtered, label).then(function (filtered) {\n      var results = new Array(length);\n      var newLength = 0;\n\n      for (var _i = 0; _i < length; _i++) {\n        if (filtered[_i]) {\n          results[newLength] = values[_i];\n          newLength++;\n        }\n      }\n\n      results.length = newLength;\n\n      return results;\n    });\n  });\n}\n\nvar len = 0;\nvar vertxNext = void 0;\nfunction asap(callback, arg) {\n  queue$1[len] = callback;\n  queue$1[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 1, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    scheduleFlush$1();\n  }\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  var nextTick = process.nextTick;\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // setImmediate should be used instead instead\n  var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n  if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n    nextTick = setImmediate;\n  }\n  return function () {\n    return nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    return node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  return function () {\n    return setTimeout(flush, 1);\n  };\n}\n\nvar queue$1 = new Array(1000);\n\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue$1[i];\n    var arg = queue$1[i + 1];\n\n    callback(arg);\n\n    queue$1[i] = undefined;\n    queue$1[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertex() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush$1 = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush$1 = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush$1 = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush$1 = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush$1 = attemptVertex();\n} else {\n  scheduleFlush$1 = useSetTimeout();\n}\n\nvar platform = void 0;\n\n/* global self */\nif (typeof self === 'object') {\n  platform = self;\n\n  /* global global */\n} else if (typeof global === 'object') {\n  platform = global;\n} else {\n  throw new Error('no global: `self` or `global` found');\n}\n\nvar _asap$cast$Promise$Ev;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// defaults\nconfig.async = asap;\nconfig.after = function (cb) {\n  return setTimeout(cb, 0);\n};\nvar cast = resolve$2;\n\nvar async = function (callback, arg) {\n  return config.async(callback, arg);\n};\n\nfunction on() {\n  config['on'].apply(config, arguments);\n}\n\nfunction off() {\n  config['off'].apply(config, arguments);\n}\n\n// Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`\nif (typeof window !== 'undefined' && typeof window['__PROMISE_INSTRUMENTATION__'] === 'object') {\n  var callbacks = window['__PROMISE_INSTRUMENTATION__'];\n  configure('instrument', true);\n  for (var eventName in callbacks) {\n    if (callbacks.hasOwnProperty(eventName)) {\n      on(eventName, callbacks[eventName]);\n    }\n  }\n}\n\n// the default export here is for backwards compat:\n//   https://github.com/tildeio/rsvp.js/issues/434\nvar rsvp = (_asap$cast$Promise$Ev = {\n  asap: asap,\n  cast: cast,\n  Promise: Promise,\n  EventTarget: EventTarget,\n  all: all$1,\n  allSettled: allSettled,\n  race: race$1,\n  hash: hash,\n  hashSettled: hashSettled,\n  rethrow: rethrow,\n  defer: defer,\n  denodeify: denodeify,\n  configure: configure,\n  on: on,\n  off: off,\n  resolve: resolve$2,\n  reject: reject$2,\n  map: map\n}, _defineProperty(_asap$cast$Promise$Ev, 'async', async), _defineProperty(_asap$cast$Promise$Ev, 'filter', filter), _asap$cast$Promise$Ev);\n\nexports['default'] = rsvp;\nexports.asap = asap;\nexports.cast = cast;\nexports.Promise = Promise;\nexports.EventTarget = EventTarget;\nexports.all = all$1;\nexports.allSettled = allSettled;\nexports.race = race$1;\nexports.hash = hash;\nexports.hashSettled = hashSettled;\nexports.rethrow = rethrow;\nexports.defer = defer;\nexports.denodeify = denodeify;\nexports.configure = configure;\nexports.on = on;\nexports.off = off;\nexports.resolve = resolve$2;\nexports.reject = reject$2;\nexports.map = map;\nexports.async = async;\nexports.filter = filter;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":79}]},{},[36])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}